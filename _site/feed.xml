<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>极客玩家大白</title>
    <description>极客玩家大白的技术分享博客。内容涵盖.NET, PHP, Leetcode面试题，Python等等~</description>
    <link>https://geekplayers.com/</link>
    <atom:link href="https://geekplayers.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 05 Oct 2020 15:21:13 +0800</pubDate>
    <lastBuildDate>Mon, 05 Oct 2020 15:21:13 +0800</lastBuildDate>
    <generator>Jekyll v3.8.7</generator>
    
      <item>
        <title>站长之家 seo查询</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/chinaz-logo.png&quot; alt=&quot;极客玩家大白-站长之家&quot; /&gt;&lt;/p&gt;

&lt;p&gt;作为一枚中文站点的站长，站长之家的&lt;a href=&quot;//geekplayers.com/dabenSeo.html&quot;&gt;SEO&lt;/a&gt;工具我们是必须熟悉并掌握的。今天大白进行了全面的整理，分享给大家~&lt;/p&gt;

&lt;h2 id=&quot;chinaz站长后台工具&quot;&gt;Chinaz站长后台工具&lt;/h2&gt;

&lt;h3 id=&quot;网站管理---站长工具&quot;&gt;网站管理 - 站长工具&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/WebsiteManage/Index&quot;&gt;http://my.chinaz.com/ChinazToolSeo/WebsiteManage/Index&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/chinaz-websites.png&quot; alt=&quot;极客玩家大白-站长之家-网站管理页&quot; /&gt;&lt;/p&gt;

&lt;p&gt;需要注意的是，免费账号最多只能提交一个网站。另外，如果你的站点是https的，在这里的一个站长验证是无法通过的，不过不影响其他功能的使用。&lt;/p&gt;

&lt;p&gt;其中的免费功能有如下这些:&lt;/p&gt;

&lt;h4 id=&quot;seo监控&quot;&gt;SEO监控&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/WebsiteManage/Index&quot;&gt;网站管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/KeyWordMonitor/Index&quot;&gt;关键词排名监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/IndexMonitor/Index&quot;&gt;关键词指数监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/IncludedMonitor/Index&quot;&gt;网站收录量监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/TdkMonitor/Index&quot;&gt;网站TDK监控&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/ChinazToolSeo/LinkMonitor/Index&quot;&gt;友情链接监控&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;域名安全监控&quot;&gt;域名安全监控&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/WebsiteManage/Index&quot;&gt;域名管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/WechatMonitor/Index&quot;&gt;微信拦截&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/DomainNameMonitor/Index?page=QQ&quot;&gt;QQ安全&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/DomainNameMonitor/Index?page=So&quot;&gt;360安全&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/DomainNameMonitor/Index?page=Baidu&quot;&gt;百度安全&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/DomainNameMonitor/Index?page=DomainName&quot;&gt;域名被墙&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://my.chinaz.com/SafeMonitorUrl/DomainNameMonitor/Index?page=BeiAn&quot;&gt;备案监控&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;工具中心---站长工具&quot;&gt;工具中心 - 站长工具&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://my.chinaz.com/ToolMember/Member/Account&quot;&gt;http://my.chinaz.com/ToolMember/Member/Account&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;alexa中心---网站管理---站长工具&quot;&gt;ALEXA中心 - 网站管理 - 站长工具&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://alexa.chinaz.com/usercenter/&quot;&gt;https://alexa.chinaz.com/usercenter/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/chinaz-alexa.png&quot; alt=&quot;极客玩家大白-站长之家-Alexa用户中心&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;日常实用工具---站长工具&quot;&gt;日常实用工具 - 站长工具&lt;/h3&gt;
&lt;p&gt;http://tool.chinaz.com/map.aspx&lt;/p&gt;

&lt;h3 id=&quot;seo查询&quot;&gt;SEO查询&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://seo.chinaz.com/&quot;&gt;SEO综合&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mseo.chinaz.com/&quot;&gt;移动SEO查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/webdetect/&quot;&gt;网页检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xzh.chinaz.com/&quot;&gt;熊掌号查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://report.chinaz.com/&quot;&gt;网站SEO报告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;优化辅助&quot;&gt;优化辅助&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/longkeywords&quot;&gt;长尾词生成&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pr.chinaz.com/&quot;&gt;PR查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://seo.chinaz.com/exportpr/&quot;&gt;PR输出值&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/seocheck&quot;&gt;SEO优化建议&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/history/&quot;&gt;SEO历史记录&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/rate&quot;&gt;关键词权重分析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/segment&quot;&gt;关键词分词&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;世界排名&quot;&gt;世界排名&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://alexa.chinaz.com/&quot;&gt;Alexa排名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://alexa.chinaz.com/alexa_history.aspx&quot;&gt;ALexa历史报告&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/&quot;&gt;收录查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/&quot;&gt;百度收录查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/entry&quot;&gt;收录率&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/haosou/&quot;&gt;360收录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;权重查询&quot;&gt;权重查询&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/all&quot;&gt;权重综合&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/&quot;&gt;百度权重&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/baidumobile&quot;&gt;百度移动权重&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/sorank&quot;&gt;360权重&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/rank360&quot;&gt;360移动权重&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/smrank&quot;&gt;神马权重&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;数据内参&quot;&gt;数据内参&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://trends.chinaz.com/ranklist&quot;&gt;权重总榜&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://trends.chinaz.com/change/baidupc/-1-1-1&quot;&gt;权重变化榜&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://trends.chinaz.com/change/baidupc/-2-1-1&quot;&gt;关键词变化榜&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://trends.chinaz.com/change/baidupc/-3-1-1&quot;&gt;预估流量变化榜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;百度关键词&quot;&gt;百度关键词&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/words.aspx&quot;&gt;百度关键词挖掘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/relatewords&quot;&gt;相关词挖掘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/keywords&quot;&gt;百度关键词综合排名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/keywordsarea/&quot;&gt;百度关键词地区排名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/keywordsbjh/&quot;&gt;百家号关键词排名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;360关键词&quot;&gt;360关键词&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/haosou/words.aspx&quot;&gt;360关键词挖掘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/keywords360/&quot;&gt;360关键词排名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/kws/&quot;&gt;网站关键词&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/keywordslmm&quot;&gt;关键词即时查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://seo.chinaz.com/kwbatch/&quot;&gt;关键词批量查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/seohis&quot;&gt;关键词历史记录&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/kwevaluate/&quot;&gt;关键词优化分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;指数查询&quot;&gt;指数查询&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mindex.chinaz.com/&quot;&gt;关键词全网指数查询 - 移动端&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://index.chinaz.com/&quot;&gt;全网指数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/topwords.aspx&quot;&gt;指数排行&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rank.chinaz.com/wordsindex.aspx&quot;&gt;指数批量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;域名备案&quot;&gt;域名备案&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://whois.chinaz.com/&quot;&gt;WHOIS查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/&quot;&gt;网站备案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;已备案域名&quot;&gt;已备案域名&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/searchs&quot;&gt;域名备案批量查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/conditions&quot;&gt;已备案域名查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/provinces&quot;&gt;最新备案域名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/report&quot;&gt;域名接入商查询&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;备案账号安全&quot;&gt;备案账号安全&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/find&quot;&gt;找回备案密码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://icp.chinaz.com/change&quot;&gt;修改备案密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ip-查询&quot;&gt;IP 查询&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/&quot;&gt;IP 综合查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/ipbatch&quot;&gt;IP 批量查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/ipwhois/&quot;&gt;IP WHOIS查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/siteip&quot;&gt;IP所在地批量&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/baiduspider&quot;&gt;百度真假蜘蛛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;同ip网站&quot;&gt;同IP网站&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/Same/&quot;&gt;同IP网站查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/linksip&quot;&gt;友情链接同IP检测&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;域名&quot;&gt;域名&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/dns/&quot;&gt;DNS查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/nslookup/&quot;&gt;NsLookup查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://del.chinaz.com/&quot;&gt;过期域名查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/DomainDel/&quot;&gt;域名删除时间&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://del.chinaz.com/type&quot;&gt;删除域名归档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/subdomain/&quot;&gt;网站子域名&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/urlencode&quot;&gt;中文域名转码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/sitespeed/&quot;&gt;网站测速&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ping.chinaz.com/&quot;&gt;PING检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/speedtest.aspx&quot;&gt;国内测速&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/speedcom.aspx&quot;&gt;国内多站对比&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/speedworld.aspx&quot;&gt;海外测速&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;网站监控&quot;&gt;网站监控&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/port/&quot;&gt;端口扫描&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Tracert&quot;&gt;路由追踪&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Tools/subnetmask&quot;&gt;子网掩码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安全状态&quot;&gt;安全状态&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/webscan&quot;&gt;网站安全检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/ppb&quot;&gt;安全联盟认证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;网站状态&quot;&gt;网站状态&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Gzips/&quot;&gt;网站GZIP压缩&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Tools/webcheck.aspx&quot;&gt;网站被黑检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/history/&quot;&gt;网站历史记录&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/websitepk.aspx&quot;&gt;竞争网站分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;网页相关&quot;&gt;网页相关&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/baidu/metadig.aspx&quot;&gt;META信息挖掘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/tools/metacheck.aspx&quot;&gt;网页META信息检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/pagestatus/&quot;&gt;网页状态检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/tools/density.aspx&quot;&gt;网页关键词密度检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/robots/&quot;&gt;robots.txt生成&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/tools/httptest.aspx&quot;&gt;在线HTTP接口测试&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stool.chinaz.com/robots&quot;&gt;Robots.txt检测&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;网页信息抓取&quot;&gt;网页信息抓取&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Tools/PageCode.aspx&quot;&gt;查看网页源代码&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/tools/robot.aspx&quot;&gt;搜索蜘蛛、机器人模拟抓取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;网站链接&quot;&gt;网站链接&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://link.chinaz.com/&quot;&gt;友情链接检测&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ip.tool.chinaz.com/linksip&quot;&gt;友情链接同IP检测&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;反链死链&quot;&gt;反链/死链&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://outlink.chinaz.com/&quot;&gt;反链查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/seos/sites.aspx&quot;&gt;网站收录/反链查询&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Links/&quot;&gt;死链接检测/全站PR查询&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;短链&quot;&gt;短链&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/Tools/dwz.aspx&quot;&gt;在线短链生成器&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tool.chinaz.com/tools/batchdwz.aspx&quot;&gt;在线批量短链生成器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;友情链接查询结果：
&lt;a href=&quot;http://link.chinaz.com/geekplayers.com&quot;&gt;http://link.chinaz.com/geekplayers.com&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Sep 2020 18:21:20 +0800</pubDate>
        <link>https://geekplayers.com/chinaz-usage.html</link>
        <guid isPermaLink="true">https://geekplayers.com/chinaz-usage.html</guid>
        
        <category>大奔SEO</category>
        
        <category>seo</category>
        
        <category>站长之家</category>
        
        
        <category>[&quot;大奔SEO&quot;, &quot;seo&quot;, &quot;chinaz&quot;, &quot;站长之家&quot;]</category>
        
        <category>[&quot;大奔SEO&quot;, &quot;seo&quot;, &quot;chinaz&quot;, &quot;站长之家&quot;]</category>
        
        <category>大奔SEO</category>
        
        <category>seo</category>
        
        <category>chinaz</category>
        
        <category>站长之家</category>
        
      </item>
    
      <item>
        <title>百度自动推送不能用了吗?你错了，刚恢复了！</title>
        <description>&lt;p&gt;在 &lt;strong&gt;百度搜索线上公开课&lt;/strong&gt; 的第二期公开课中百度的产品运营小姐姐 &lt;strong&gt;李文菊&lt;/strong&gt; 提到自动推送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push.js&lt;/code&gt;接口过一段时间会恢复上线的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/pushjs-recove-p1.png&quot; alt=&quot;百度自动推送恢复-极客玩家大白&quot; title=&quot;极客玩家大白&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/pushjs-recove-p2.png&quot; alt=&quot;百度自动推送恢复-极客玩家大白&quot; title=&quot;大奔SEO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;视频回放地址: &lt;a href=&quot;http://mbd.baidu.com/webpage?type=live&amp;amp;action=liveshow&amp;amp;source=h5pre&amp;amp;room_id=3789761765&quot;&gt;http://mbd.baidu.com/webpage?type=live&amp;amp;action=liveshow&amp;amp;source=h5pre&amp;amp;room_id=3789761765&lt;/a&gt;, 就是在时间点&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;03:04&lt;/code&gt;的。&lt;/p&gt;

&lt;p&gt;这不，今天就恢复上线了~&lt;/p&gt;

&lt;p&gt;今天进入 &lt;a href=&quot;//ziyuan.baidu.com&quot;&gt;百度搜索资源平台&lt;/a&gt; 时，发现”自动推送”的入口已恢复，有图有真相！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/pushjs-recove-p3.png&quot; alt=&quot;百度自动推送恢复-极客玩家大白&quot; title=&quot;极客玩家大白&quot; /&gt;&lt;/p&gt;

&lt;p&gt;具体的代码如下:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curProtocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;curProtocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;bp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://zz.bdstatic.com/linksubmit/push.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;bp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;http://push.zhanzhang.baidu.com/push.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;各位小伙伴，赶紧加回来吧，你的网站收录情况一定会越来越好喔~&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Sep 2020 04:05:10 +0800</pubDate>
        <link>https://geekplayers.com/baidu-recover-push-js.html</link>
        <guid isPermaLink="true">https://geekplayers.com/baidu-recover-push-js.html</guid>
        
        <category>flagcounter</category>
        
        <category>flagcounter插件</category>
        
        <category>flagcounter类似</category>
        
        <category>博客园</category>
        
        
        <category>[&quot;百度自动推送&quot;, &quot;百度&quot;, &quot;seo&quot;, &quot;百度自动推送js&quot;, &quot;百度js自动推送代码&quot;]</category>
        
        <category>[&quot;百度自动推送&quot;, &quot;百度&quot;, &quot;seo&quot;, &quot;百度自动推送js&quot;, &quot;百度js自动推送代码&quot;]</category>
        
        <category>百度自动推送</category>
        
        <category>百度</category>
        
        <category>seo</category>
        
        <category>百度自动推送js</category>
        
        <category>百度js自动推送代码</category>
        
      </item>
    
      <item>
        <title>必应API接口node.js版</title>
        <description>&lt;p&gt;近期，在研究百度、必应、API等的url提交API时，发现有用Go语言做工具的大佬的分享 &lt;a href=&quot;https://pylist.com/t/1582821291&quot;&gt;利用 API 自动向搜索引擎提交网址(Go语言版) - pyList&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;其中提到bing API提交方法，并给出了Go语言代码:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrl?apikey=xxxxxxxx&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewBufferString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`{
&quot;siteUrl&quot;:&quot;https://pylist.com&quot;,
&quot;url&quot;:&quot;https://pylist.com/t/1581940902&quot;
}`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/json; charset=utf-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以保存为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bing-push.go&lt;/code&gt;, 然后在本地执行哈~&lt;/p&gt;

&lt;p&gt;而相比于go语言，我本人对node.js更熟悉一点~&lt;/p&gt;

&lt;h2 id=&quot;必应api接口-单条提交&quot;&gt;必应API接口-单条提交&lt;/h2&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrl?apikey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* xxx需替换为你的key */&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;siteUrl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 替换为你的站点，并且在Bing站长平台中验证过权限 */&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com/link.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;   &lt;span class=&quot;cm&quot;&gt;/* 替换为你需要推送的url */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bing response: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;登录必应站长后台&lt;a href=&quot;https://www.bing.com/webmasters&quot;&gt;https://www.bing.com/webmasters&lt;/a&gt;，点右上角的设置按钮(齿轮⚙)，找到你的key：&lt;/p&gt;

&lt;p&gt;Step 1:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/bing-api-geekplayers.com1.png&quot; alt=&quot;大奔SEO_极客玩家大白&quot; title=&quot;大奔SEO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Step 2:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/bing-api-geekplayers.com2.png&quot; alt=&quot;大奔SEO_极客玩家大白&quot; title=&quot;大奔SEO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后将上述代码中的xxx替换为你的key。&lt;/p&gt;

&lt;p&gt;先保存文件为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bing-SingleSumbit.js&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;然后在当前目录下打开命令行，输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install request&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;接下来改好key, siteurl, url等值后，就可以在命令行中运行:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;node bing-SingleSumbit.js
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;必应api接口-批量提交&quot;&gt;必应API接口-批量提交&lt;/h2&gt;

&lt;h3 id=&quot;批量提交---版本1&quot;&gt;批量提交 - 版本1&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;siteUrl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;urlList&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com/link.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com/about.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com/blog/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrlbatch?apikey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* xxx需替换为你的key */&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// &amp;lt;--Very important!!!&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myJson&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我记得这里有个跨域的问题, 设置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;json: true&lt;/code&gt; 即可解决。&lt;/p&gt;

&lt;p&gt;先将代码保存为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bing-BatchSumbit.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;运行方法，同上~&lt;/p&gt;

&lt;h3 id=&quot;批量提交---改进1&quot;&gt;批量提交 - 改进1&lt;/h3&gt;

&lt;p&gt;在上一版本的基础上可以改进，即：把多条url先按行放进link.txt中，然后读取处理~&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readFileToArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fReadName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createReadStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fReadName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;readObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;readObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;readLine close....&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// var urlsFile = path.resolve(__dirname, 'links.txt').replace(/\\/g, '/');  // For Windows&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urlsFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;nodejs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;links.txt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* 兼容 Windows/Linux, 这里nodejs为上级文件夹名 */&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;readFileToArr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlsFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myJson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;siteUrl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://geekplayers.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;urlList&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrlbatch?apikey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// &amp;lt;--Very important!!!&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myJson&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;保存文件为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bing-BatchSumbit2.js&lt;/code&gt;，&lt;/p&gt;

&lt;p&gt;命令行中用cd命令切换到当前目录，然后依次输入:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;fs
npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;readline
npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;path
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;改好key, siteurl, url等值后，并在当前目录创建文件links.txt并填入需要推送的多条url，就可以在命令行中运行:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;node bing-BatchSumbit2.js
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;批量提交---改进2&quot;&gt;批量提交 - 改进2&lt;/h3&gt;

&lt;p&gt;上一版本的代码中，links.txt的内容是手动添加的，那我们可不可以从sitemap.xml获取并直接转换为.txt供后面使用呢？当然可以，于是另外写了一段node.js代码做这个事。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cheerio&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;cheerio&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://www.geekplayers.com/sitemap.xml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cheerio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;xmlMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;textFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myLink.txt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;wx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;EEXIST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myfile already exists&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    
                    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unlinkSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Remove file&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;One line converted failed.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// append failed&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// console.error('One line converted done!');&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;                
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Converted done!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Reference: https://stackoverflow.com/a/25012834/6075331&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;先保存代码为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sitemapInXMLtoText.js&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;命令行中用cd命令切换到当前目录，然后依次输入:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;fs
npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;request
npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;cheerio
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;改好key, siteurl, url等值后，就可以在命令行中运行:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;node sitemapInXMLtoText.js
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下来只需将request调用时的第一个参数改为你的sitemap.xml的网址即可~&lt;/p&gt;

&lt;p&gt;最后再到命令行中执行一次:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;node bing-BatchSumbit2.js
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bing还提供了其他api接口&quot;&gt;Bing还提供了其他API接口&lt;/h3&gt;

&lt;p&gt;GetKeywordStats - Bing&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;https://ssl.bing.com/webmaster/api.svc/json/GetKeywordStats?q=dog%20beds&amp;amp;country=be&amp;amp;language=nl-BE&amp;amp;apikey=...
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;RSS Feed提交:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bing.com/webmaster/api.svc/json/SubmitFeed&quot;&gt;https://bing.com/webmaster/api.svc/json/SubmitFeed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;获取用户验证后的站点信息:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ssl.bing.com/webmaster/api.svc/json/GetUserSites&quot;&gt;https://ssl.bing.com/webmaster/api.svc/json/GetUserSites&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有兴趣的朋友可以继续深入研究哈, 欢迎在评论区留言交流~&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Sep 2020 18:21:20 +0800</pubDate>
        <link>https://geekplayers.com/bing-api-nodejs.html</link>
        <guid isPermaLink="true">https://geekplayers.com/bing-api-nodejs.html</guid>
        
        <category>seo</category>
        
        <category>Bing</category>
        
        <category>大奔SEO</category>
        
        
        <category>[&quot;大奔SEO&quot;, &quot;seo&quot;, &quot;Bing&quot;]</category>
        
        <category>[&quot;大奔SEO&quot;, &quot;seo&quot;, &quot;Bing&quot;]</category>
        
        <category>大奔SEO</category>
        
        <category>seo</category>
        
        <category>Bing</category>
        
      </item>
    
      <item>
        <title>FlagCounter被博客园禁用的解决方法</title>
        <description>&lt;h2 id=&quot;flagcounter被博客园禁用的解决方法&quot;&gt;FlagCounter被博客园禁用的解决方法&lt;/h2&gt;

&lt;p&gt;自从博客园禁用大家常用的ip访问统计插件flag counter后，相信大家多少会有点不太适应。
大白试用了各种类似于flagcounter的工具，发现有两个主要的备选方案，即&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tracemyip.org&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clustrmaps.com&lt;/code&gt;，接下来大白就详细说说具体的用法。&lt;/p&gt;

&lt;h2 id=&quot;1-tracemyiporg&quot;&gt;1. Tracemyip.org&lt;/h2&gt;

&lt;p&gt;首先，注册账号 &lt;a href=&quot;https://www.tracemyip.org/members/index.php?page=spm_checkout&amp;amp;type=ssub&amp;amp;ntc=1&quot;&gt;https://www.tracemyip.org/members/index.php?page=spm_checkout&amp;amp;type=ssub&amp;amp;ntc=1&lt;/a&gt;，类型选”Level 1 Free”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/trace-p1.png&quot; alt=&quot;极客玩家大白p1-Tracemyip.org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后拖到页面下方，点”Sign up”&lt;/p&gt;

&lt;p&gt;接下来，进入页面:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://s3.tracemyip.org/members/index.php?page=projects_codereg&amp;amp;style=1500~1597899418~14)*2~0F5999*F7FFE6*537899*000000~1*1*0*0*0&amp;amp;rgtype=4684NR-IPIB&amp;amp;urlupdate=&quot;&gt;https://s3.tracemyip.org/members/index.php?page=projects_codereg&amp;amp;style=1500~1597899418~14)*2~0F5999*F7FFE6*537899*000000~1*1*0*0*0&amp;amp;rgtype=4684NR-IPIB&amp;amp;urlupdate=&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;相应短链为: &lt;a href=&quot;https://d.oo14.com/bNQc&quot;&gt;https://d.oo14.com/bNQc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不登录时，得到的是:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/trace-p2.png&quot; alt=&quot;极客玩家大白p2-Tracemyip.org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填完信息时，会要求填email，然后登陆即可~&lt;/p&gt;

&lt;p&gt;代码类型选用:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML Code - Compatibility Mode 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;由于我的博客园博客是&lt;a href=&quot;http://www.cnblogs.com/enjoy233&quot;&gt;www.cnblogs.com/enjoy233&lt;/a&gt;，所以相应地url需要填: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.cnblogs.com/enjoy233&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/trace-p3.png&quot; alt=&quot;极客玩家大白p3-Tracemyip.org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;得到代码后，贴到博客园设置后台的&lt;strong&gt;博客侧边栏公告&lt;/strong&gt;中:&lt;/p&gt;

&lt;p&gt;比如，我的是:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height:16px;text-align:center;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Joomla hits ip traffic statistics&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.tracemyip.org/tools/website-visitors-counter-traffic-tracker-statistics/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//s3.tracemyip.org/tracker/1500~1597898865~14*2~0F5999*F7FFE6*537899*000000~1*1*0*1*1/4684NR-IPIB/54026/11/njsUrl/&quot;&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Joomla hits ip traffic statistics&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;border:0px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果图如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/trace-p4.png&quot; alt=&quot;极客玩家大白p4-Tracemyip.org&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-clustrmapscom&quot;&gt;2. clustrmaps.com&lt;/h2&gt;

&lt;p&gt;注册账号: &lt;a href=&quot;https://clustrmaps.com/bl/signup&quot;&gt;https://clustrmaps.com/bl/signup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;创建Widget: &lt;a href=&quot;https://clustrmaps.com/add&quot;&gt;https://clustrmaps.com/add&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/clustrmaps-p1.png&quot; alt=&quot;极客玩家大白p1-clustrmaps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填入自己的博客园博客地址，比如我的是:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/enjoy233/&quot;&gt;https://www.cnblogs.com/enjoy233/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后点”next”按钮即可得到代码:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/clustrmaps-p2.png&quot; alt=&quot;极客玩家大白p2-clustrmaps&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://clustrmaps.com/site/1bcz5&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Visit tracker&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;img&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//www.clustrmaps.com/map_v2.png?d=Z5dh85VLcC8BLff99dwZ0SHJUomU2T_XMP-WbIcG2wY&amp;amp;cl=ffffff&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下来，将红线框出部分的代码贴到博客园后台的&lt;strong&gt;博客侧边栏公告&lt;/strong&gt;中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/clustrmaps-p3.png&quot; alt=&quot;极客玩家大白p3-clustrmaps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;保存代码，就可以看到效果了~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/clustrmaps-p4.png&quot; alt=&quot;极客玩家大白p4-clustrmaps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来，二选一即可，大功告成~&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Sep 2020 05:18:07 +0800</pubDate>
        <link>https://geekplayers.com/replace-flag-counter.html</link>
        <guid isPermaLink="true">https://geekplayers.com/replace-flag-counter.html</guid>
        
        <category>flagcounter</category>
        
        <category>flagcounter插件</category>
        
        <category>flagcounter类似</category>
        
        <category>博客园</category>
        
        
        <category>[&quot;flagcounter&quot;, &quot;flagcounter插件&quot;, &quot;flagcounter类似&quot;]</category>
        
        <category>[&quot;flagcounter&quot;, &quot;flagcounter插件&quot;, &quot;flagcounter类似&quot;]</category>
        
        <category>flagcounter</category>
        
        <category>flagcounter插件</category>
        
        <category>flagcounter类似</category>
        
      </item>
    
      <item>
        <title>在GitLab pages上快速搭建Jekyll博客</title>
        <description>&lt;h2 id=&quot;在gitlab-pages上快速搭建jekyll博客&quot;&gt;在GitLab pages上快速搭建Jekyll博客&lt;/h2&gt;

&lt;p&gt;前一段时间将我的Jekyll静态博客从github pages镜像部署到了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zeit.co&lt;/code&gt;(现vercel)上了一份，最近偶然发现gitlab pages也不错，百度也会正常抓取，于是动手倒腾，将github pages快速迁移Jekyll博客到&lt;a href=&quot;https://web.geekplayers.com&quot;&gt;gitlab pages&lt;/a&gt;，中途遇到了不少坑，管他呢，一把刷。&lt;/p&gt;

&lt;p&gt;于是有了下文的 &lt;strong&gt;从github pages快速迁移Jekyll博客到gitlab pages的完全指南。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step1-导入已有项目&quot;&gt;Step1: 导入已有项目&lt;/h2&gt;

&lt;p&gt;登陆&lt;a href=&quot;https://gitlab.com&quot;&gt;gitlab.com&lt;/a&gt;，点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Project&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598757602233-a850ea96-39a9-4cff-bdf9-c320d5d2d744.png&quot; alt=&quot;screenshot1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Import projects&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598757844067-819530aa-262f-4971-bead-71c9c1b6abac.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比如，我的jekyll blog对应的代码仓库是: &lt;a href=&quot;https://github.com/yanglr/yanglr.github.io&quot;&gt;https://github.com/yanglr/yanglr.github.io&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;由于我绑定了github账号yanglr，系统会将我在github下所有的分支都load进来，接下来，我选择&lt;a href=&quot;https://github.com/yanglr/yanglr.github.io&quot;&gt;yanglr/yanglr.github.io&lt;/a&gt;,这个仓库，当然Import进来之前要记得改名为: gitlab-username.gitlab.io, 接下来等待导入完成即可。&lt;/p&gt;

&lt;p&gt;或点击&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repo by URL&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598758018132-66be5558-b6cb-424f-9b5f-62d422cf9f13.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step2-为gitlab生成ssh密钥&quot;&gt;Step2: 为gitlab生成ssh密钥&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;bravo@localhost MINGW64 /d/coding/Gitlab.com

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh

bravo@localhost MINGW64 ~

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 2048 &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email@example.com&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后复制id_rsa.pub的内容，贴到gitlab profile的 settings -&amp;gt; ssh key中，具体入口为: &lt;a href=&quot;https://gitlab.com/profile/keys&quot;&gt;https://gitlab.com/profile/keys&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598759369549-f23ad8d1-68f8-4f97-97d8-380c00fdb743.png&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果怕github的密钥文件与gitlab的弄混，可以在执行ssh-keygen -t rsa -b 2048 -C ““时，文件名取为: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_rsa_gitlab&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后到 .ssh 文件夹下创建一个文件名为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt;的文件，内容如下:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# github
    Host github.com
    Hostname github.com
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/id_rsa

# gitlab
    Host gitlab.com
    Hostname gitlab.com
    User legege007
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/id_rsa_gitlab
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step3-clone代码&quot;&gt;Step3: Clone代码&lt;/h2&gt;

&lt;p&gt;设置好ssh key后，我们就可以克隆代码到本地了，命令如下:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git clone https://gitlab.com/legege007/legege007.gitlab.io.git
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;git clone非常慢的解决方法:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在自己的PC上git clone太慢了，clone地址换https的速度还可以~&lt;/p&gt;

&lt;p&gt;有能力科学地上网的小伙伴可以想办法解决。&lt;/p&gt;

&lt;p&gt;还可以在git clone时，去掉末尾的.git&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step4-创建-cicd配置文件&quot;&gt;Step4: 创建 CI/CD配置文件&lt;/h2&gt;

&lt;p&gt;这部分可以直接参考gitlab官方给的 jekyll 示例 &lt;a href=&quot;https://gitlab.com/pages/jekyll&quot;&gt;https://gitlab.com/pages/jekyll&lt;/a&gt; 来做。&lt;/p&gt;

&lt;p&gt;具体做法是，在本地克隆下来的代码仓库的根目录中创建文件 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab.ci.yml&lt;/code&gt;, 然后贴入如下代码:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby:latest&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;production&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;C.UTF-8&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle install&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build -d test&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build -d public&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;public&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;来源: &lt;a href=&quot;https://gitlab.com/pages/jekyll/-/blob/master/.gitlab-ci.yml&quot;&gt;https://gitlab.com/pages/jekyll/-/blob/master/.gitlab-ci.yml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;同理，如果你的静态博客选用的框架是hexo, 请参考项目&lt;a href=&quot;https://gitlab.com/pages/hexo&quot;&gt;https://gitlab.com/pages/hexo&lt;/a&gt; 下的CI/CD配置文件&lt;a href=&quot;https://gitlab.com/pages/hexo/-/blob/master/.gitlab-ci.yml&quot;&gt;https://gitlab.com/pages/hexo/-/blob/master/.gitlab-ci.yml&lt;/a&gt;，gitbook 项目请用 &lt;a href=&quot;https://gitlab.com/pages/gitbook/-/blob/master/.gitlab-ci.yml&quot;&gt;https://gitlab.com/pages/gitbook/-/blob/master/.gitlab-ci.yml&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;如果想对gitlab CI/CD有更多的了解，请参看:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/help/ci/quick_start/README&quot;&gt;https://gitlab.com/help/ci/quick_start/README&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step5-等待build2到3分钟build完成后即可访问&quot;&gt;Step5: 等待build，2到3分钟build完成后即可访问&lt;/h2&gt;

&lt;p&gt;点击页面左侧菜单中的 CI/CD,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598758942346-5b456249-ea92-4ff9-8919-c83ac7c9067c.png&quot; alt=&quot;image5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大概2到3分钟build完成后即可访问，pipelines中会出现一个状态为 passed 的记录，这时就可以访问你的静态博客(pages)了，访问地址是：&lt;a href=&quot;https://legege007.gitlab.io&quot;&gt;legege007.gitlab.io&lt;/a&gt;，由于gitlab是为gitlab.io默认提供ssl证书的，所有此时也可以访问https版本: &lt;a href=&quot;https://legege007.gitlab.io&quot;&gt;https://legege007.gitlab.io&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step6-绑定域名&quot;&gt;Step6: 绑定域名&lt;/h2&gt;

&lt;p&gt;现在，我们来绑定自己的域名。&lt;/p&gt;

&lt;p&gt;回到项目 刚才的代码仓库，比如我的是: &lt;a href=&quot;https://gitlab.com/legege007/legege007.gitlab.io&quot;&gt;https://gitlab.com/legege007/legege007.gitlab.io&lt;/a&gt;，点击左侧 Settings -&amp;gt; pages，会发现右上角有个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New Domain&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598759747911-24a52910-8a9f-46e6-8470-a2454a915fda.png&quot; alt=&quot;image6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比如，我想绑定到: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;geekplayers.com&lt;/code&gt;，填进去，点”Create New Domain”即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598759978763-86f36d62-1a3f-4e6d-9f8e-0d55b4dc06f8.png&quot; alt=&quot;image7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接下来会看到以下界面:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/1598760055832-ed221625-27e7-4eeb-91fa-9606b235f19f.png&quot; alt=&quot;image8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时，需要在域名管理网站(比如，我在腾讯云上买的域名，我需要登陆 &lt;a href=&quot;https://console.cloud.tencent.com/cns&quot;&gt;https://console.cloud.tencent.com/cns&lt;/a&gt;)，然后在里面先后分别添加一条类型为TXT和一条类型为CNAME的记录。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;主机记录&lt;/th&gt;
      &lt;th&gt;记录类型&lt;/th&gt;
      &lt;th&gt;线路类型&lt;/th&gt;
      &lt;th&gt;记录值&lt;/th&gt;
      &lt;th&gt;MX优先级&lt;/th&gt;
      &lt;th&gt;TTL（秒）&lt;/th&gt;
      &lt;th&gt;最后操作时间&lt;/th&gt;
      &lt;th&gt;操作&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;_gitlab-pages-verification-code.web&lt;/td&gt;
      &lt;td&gt;TXT&lt;/td&gt;
      &lt;td&gt;默认&lt;/td&gt;
      &lt;td&gt;gitlab-pages-verification-code=319ec4807facc9d92c6c62ba4efd1ccf&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;blog&lt;/td&gt;
      &lt;td&gt;CNAME&lt;/td&gt;
      &lt;td&gt;默认&lt;/td&gt;
      &lt;td&gt;legege007.gitlab.io.&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;600&lt;/td&gt;
      &lt;td&gt;2020-08-30 11:03:33&lt;/td&gt;
      &lt;td&gt;修改暂停删除&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;TXT那一条加完之后，可以点击 Verify Status 右侧的 红色按钮旁边的 ↶ ↺ ⟲ 按钮验证网站所有权，该按钮会变成绿色，接下来点击页面下方的”Save Changes”。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step7-坐等自动下发ssl证书&quot;&gt;Step7: 坐等自动下发SSL证书&lt;/h2&gt;

&lt;p&gt;最后就是等gitlab自动下发ssl证书。&lt;/p&gt;

&lt;p&gt;大概再需要等6分钟左右，页面上的Domain会从http版的 &lt;a href=&quot;http://blog.geekplayers.com&quot;&gt;http://blog.geekplayers.com&lt;/a&gt; 变为: &lt;a href=&quot;https://blog.geekplayers.com&quot;&gt;https://blog.geekplayers.com&lt;/a&gt;，表明SSL证书已成功获取。&lt;/p&gt;

&lt;p&gt;至此，gitlab pages构建完毕。如有疑问，欢迎在评论区提问交流~&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Aug 2020 02:23:52 +0800</pubDate>
        <link>https://geekplayers.com/migrate-from-github-pages-to-gitlab-pages.html</link>
        <guid isPermaLink="true">https://geekplayers.com/migrate-from-github-pages-to-gitlab-pages.html</guid>
        
        <category>gitlab</category>
        
        <category>github</category>
        
        
        <category>gitlab pages</category>
        
        <category>github pages</category>
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>国内SEO英雄榜，你知道几个？</title>
        <description>&lt;p&gt;by &lt;a href=&quot;https://www.zhihu.com/people/seoaqua&quot;&gt;刘明&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;名单中列出的大部分都是百度站长学院vip大讲堂学员&quot;&gt;名单中列出的大部分都是《百度站长学院VIP大讲堂》学员。&lt;/h2&gt;

&lt;h2 id=&quot;百度站长学院-供稿&quot;&gt;&lt;a href=&quot;http://zhanzhang.baidu.com/college/index&quot;&gt;百度站长学院&lt;/a&gt; 供稿&lt;/h2&gt;

&lt;h2 id=&quot;昝辉&quot;&gt;昝辉&lt;/h2&gt;
&lt;p&gt;网名：ZAC&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/zacsg-zanhui.jpg&quot; alt=&quot;极客玩家大白-seoZac&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Email：zanhui@gmail.com（来自本人博客）&lt;/p&gt;

&lt;p&gt;描述：SEO行业教父，《SEO实战密码》作者。2000年做自己的第一个个人爱好网站，从此一发不可收拾。2003年辞职，创建中新网络科技Silver Media，全职SEO（搜索引擎优化），虚拟主机等以网络为中心的生意。目前是新加坡发展最快的虚拟主机和服务器提供商。&lt;/p&gt;

&lt;h2 id=&quot;刘明&quot;&gt;刘明&lt;/h2&gt;

&lt;p&gt;网名：seoaqua&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/liumin.jpg&quot; alt=&quot;极客玩家大白-刘明&quot; /&gt;&lt;/p&gt;

&lt;p&gt;QQ/微信：628552（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：曾就职于新浪，网易。现任艺龙网SEO总监，SEO渠道的酒店订单连续两年翻翻。研发和架构能力强，善于通过技术手段&lt;/p&gt;

&lt;p&gt;（Ruby+Linux+Mysql+Redis+Hadoop+Git）搭建SEO系统（关键词挖掘、友链系统、差异化内容API、SEO自动测试、蜘蛛行为分析行业排名趋势）解决问题。带领团队设计并研发了自动化SEM系统（物料管理、关键词粒度的数据统计、关键词挖掘和自动识别、多维度精准调优），适用于全部搜索引擎，自称强于绝大部分外包公司。对ASO有一定研究和实践。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相关文章（可在站长学院找到）：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=376&quot;&gt;如何避免大量重复URL被百度收录&lt;/a&gt;》&lt;/p&gt;

&lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=348&quot;&gt;如何保证网站长期的SEO健康度&lt;/a&gt;》&lt;/p&gt;

&lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=419&quot;&gt;利用百度蜘蛛referer找到报错页面入口&lt;/a&gt;》&lt;/p&gt;

&lt;h2 id=&quot;安琦&quot;&gt;安琦&lt;/h2&gt;
&lt;p&gt;网名：an7
QQ：54818355（经本人同意）
描述：早年从事外贸seo,现在携程无线营销渠道产品组负责人&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=307&quot;&gt;移动站点站内优化checklist_最新文章&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=294&quot;&gt;单页应用的搜索引擎优化&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=375&quot;&gt;如何让百度准确地识别页面类型&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;申永&quot;&gt;申永&lt;/h2&gt;
&lt;p&gt;网名：大卫&lt;/p&gt;

&lt;p&gt;QQ/微信：seoview（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：2003年涉足SEO，国内SEO老兵，曾就职于香港大型外贸公司，负责上千站群Google，Yahoo， Bing排名优化。后续先后就职阿里巴巴国际站，中文站流量业务负责人。14年中英文大型B2B，B2C，企业官网，旺铺等网站SEO，ASO，SEM，DSP，VSO，Affiliate，自媒体营销推广经验。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.seoview.cn/&quot;&gt;SEO外链工具&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://seohacker.lofter.com/post/1ecd8fa3_120476d6&quot;&gt;2018SEO趋势，搜索引擎优化清单，2018年SEO如何做？&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://seohacker.lofter.com/post/1ecd8fa3_11ddeff3&quot;&gt;百度算法大全，SEO从业者的”福音”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;飞鹰正义&quot;&gt;飞鹰正义&lt;/h2&gt;
&lt;p&gt;QQ：356252296（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：百度站长社区超级版主&lt;/p&gt;

&lt;p&gt;ID：飞鹰正义，曾有过一段斗志昂扬的红客史擅长&lt;/p&gt;

&lt;p&gt;windows下安全攻防，是国内较早的百度seo人，为人低调帅气，现任中国服装网SEO
负责人。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=422&quot;&gt;网站收录怪象： 那些关于收录的秘密&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=373&quot;&gt;适配关系发生变化如何通知百度&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=353&quot;&gt;如何让百度正确识别跳转适配关系&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=344&quot;&gt;百度眼中的优质移动站点什么样&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;胡金环&quot;&gt;胡金环&lt;/h2&gt;

&lt;p&gt;网名:神马浮云&lt;/p&gt;

&lt;p&gt;QQ:1038442403&lt;/p&gt;

&lt;p&gt;描述：专业从事房产网站平台seo，sem工作，原房途网/房探007项目seo总监，现就
职酷客美地从事移动互联网运营推广工作。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=374&quot;&gt;浅谈移动站点优化之痛——HTML5_最新文章&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=381&quot;&gt;为何流量与关键词的数据比百度统计少&lt;/a&gt;》&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;胡亮亮&quot;&gt;胡亮亮&lt;/h2&gt;

&lt;p&gt;描述：新网迈广告seo总监&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=301&quot;&gt;《杀死你网站SEO的5个技术》&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=435&quot;&gt;《如何在百度维护品牌权益》&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;柳焕斌&quot;&gt;柳焕斌&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/%E6%9F%B3%E7%84%95%E6%96%8Crobin.jpg&quot; alt=&quot;极客玩家大白-柳焕斌Robin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;描述：Robin，在线营销专家，资深电商从业者，从事互联网工作9年。2006年发起和联合创建SEO公益分享组织点石互动，2009年加入麦包包，分管在线营销业务，现担任凯络中国电商总经理，负责电商平台布局业务。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;《&lt;a href=&quot;http://zhanzhang.baidu.com/college/articleinfo?id=313&quot;&gt;柳焕斌谈百度与站长关系演变&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;seo网红&quot;&gt;SEO网红&lt;/h2&gt;

&lt;h2 id=&quot;齐军瑞&quot;&gt;齐军瑞&lt;/h2&gt;

&lt;p&gt;网名：痞子瑞&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/pizirui.jpeg&quot; alt=&quot;极客玩家大白-痞子瑞&quot; /&gt;&lt;/p&gt;

&lt;p&gt;微信：seoshendu（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：《SEO深度解析》作者&lt;/p&gt;

&lt;h2 id=&quot;陈汝一&quot;&gt;陈汝一&lt;/h2&gt;
&lt;p&gt;QQ：1296429673（经本人同意）&lt;/p&gt;

&lt;p&gt;网名：夜息&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/yexi.jpg&quot; alt=&quot;极客玩家大白_夜息yexi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;描述：曾任途牛网seo负责人,SEO顾问服务过多个行业，大中小规模的网站，并且取得了明显的流量增长效果。 在业内具有良好的人脉资源，与国内各大互联网公司相关人士有密切交流。&lt;/p&gt;

&lt;h2 id=&quot;张闻一&quot;&gt;张闻一&lt;/h2&gt;
&lt;p&gt;网名：Zero&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/geekplayers/images/raw/master/zhangwenyi_zero.jpg&quot; alt=&quot;极客玩家大白_张闻一Zero&quot; /&gt;&lt;/p&gt;

&lt;p&gt;描述：曾负责过赶集、美团、知乎等网站的SEO，突出成绩如三个月内使美团的百度SEO流量不止翻倍。在搜索引擎及技术方向，有广泛且较深入的研究。创办SEO前线主营SEO顾问业务，服务于智联招聘、下厨房等网站。且运营行业论坛，将行业竞争最大的词”SEO”的排名做到百度首页。&lt;/p&gt;

&lt;h2 id=&quot;张国平&quot;&gt;张国平&lt;/h2&gt;
&lt;p&gt;作品: sem一家之言&lt;/p&gt;

&lt;p&gt;描述：杭州光年信息技术有限公司创始人，著名SEO专家。从个人站长到阿里巴巴SEO负责人，张国平先生凭借自己的优秀SEO经验技术使得众多网站流量得到飞速提升，也因此在业内获得广泛赞誉。他以”实战派”SEO为人所称道，注重数据分析，坚持用数据来指导SEO，提倡”做科学的SEO”。杭州光年自创办以来，已经先后成功的为”易趣”、”携程”、”19楼”、”证券之星”、”阿里巴巴日文站”等知名网站提了SEO咨询服务，并且获得了客户的高度评价。&lt;/p&gt;

&lt;h2 id=&quot;黄凤华&quot;&gt;黄凤华&lt;/h2&gt;
&lt;p&gt;网名：夫唯&lt;/p&gt;

&lt;p&gt;描述：seowhy创始人。本科就读于山东大学，研究生就读于北京师范大学。夫唯先生推崇”循序渐进，基业长青”的SEO运维思想，以SEOWHY为实战案例，历经2年零起步创造了网站品牌，为SEO行业奉献了一个优秀的行业平台和成功案例。
WW&lt;/p&gt;

&lt;h2 id=&quot;上市公司营销高管&quot;&gt;上市公司营销高管&lt;/h2&gt;

&lt;h2 id=&quot;付必鹏&quot;&gt;付必鹏&lt;/h2&gt;
&lt;p&gt;QQ：保密&lt;/p&gt;

&lt;p&gt;阿里国际站资深总监，点石互动联合创始人。&lt;/p&gt;

&lt;h2 id=&quot;孙波&quot;&gt;孙波&lt;/h2&gt;
&lt;p&gt;QQ：保密&lt;/p&gt;

&lt;p&gt;描述：携程网在线营销副总裁。资深互联网民工，曾就职于阿里巴巴、5173等。&lt;/p&gt;

&lt;h2 id=&quot;韦护-微信whooll&quot;&gt;韦护 （微信：whooll）&lt;/h2&gt;
&lt;p&gt;现京东 市场无线营销 高级经理，（09年～14年负责京东市场流量拓展部 ，业务板块：全站SEO、流量BD、精选商品频道、API合作和流量数据分析等），07年开始网赚、网络营销、seo、建站等内容。&lt;/p&gt;

&lt;h2 id=&quot;孙健小健&quot;&gt;孙健（小健）&lt;/h2&gt;
&lt;p&gt;QQ：307824429（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：前国美、库巴流量产品运营部总监；现任慧聪网流量部总监。&lt;/p&gt;

&lt;h2 id=&quot;刘斌&quot;&gt;刘斌&lt;/h2&gt;
&lt;p&gt;QQ：478800361（经本人同意）&lt;/p&gt;

&lt;p&gt;网名：BinGo&lt;/p&gt;

&lt;p&gt;描述：夫唯学院第五期学员，搜房网平台事业部总监，负责搜房网seo、sem和搜索合
作。&lt;/p&gt;

&lt;h2 id=&quot;seo服务提供商&quot;&gt;SEO服务提供商&lt;/h2&gt;

&lt;h2 id=&quot;陈超&quot;&gt;陈超&lt;/h2&gt;
&lt;p&gt;QQ：10511707（来自本人公开微博）&lt;/p&gt;

&lt;p&gt;描述：上海刑天文化传播有限公司创始人，SEO服务提供商。&lt;/p&gt;

&lt;h2 id=&quot;狼雨&quot;&gt;狼雨&lt;/h2&gt;
&lt;p&gt;QQ：20985142（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：2011年一站成名。狼雨SEO创始人，提供外包服务。&lt;/p&gt;

&lt;h2 id=&quot;方法这是真名&quot;&gt;方法（这是真名）&lt;/h2&gt;
&lt;p&gt;QQ：123119329（经本人同意）&lt;/p&gt;

&lt;p&gt;SEO服务提供商，提供SEO顾问、SEO全案外包、SEO项目合作、SEO培训等服务。现任智联招聘高级SEO顾问，负责智联招聘移动端SEO规划实施，以及智联旗下高端招聘平台智联卓聘的PC+移动端全部SEO相关工作。个人博客(http://seofangfa.com)及个人微信订阅号(seofangfa)是一个以分享科学SEO理念为主的平台，也收集整理了很多国内顶级SEO的干货文章，目前每天有1000多个独立访客。&lt;/p&gt;

&lt;h2 id=&quot;小向&quot;&gt;小向&lt;/h2&gt;
&lt;p&gt;QQ：8943489（经本人同意）&lt;/p&gt;

&lt;p&gt;公司：脉速营销 IMAISU&lt;/p&gt;

&lt;p&gt;描述：4A广告公司投资，拥有4A策划团队结合知名互联网运营背景，超过8年SEO实战经验，6年SEM操作经验，4年SEO培训经验。服务于旅游、电商、金融、快消、医疗、教育、机械、数码、育儿等多个领域客户，为携程、平安、爱家、众安、好孩子、舒适等100家知名品牌网站提供顾问及优化服务。&lt;/p&gt;

&lt;h2 id=&quot;郑志平&quot;&gt;郑志平&lt;/h2&gt;
&lt;p&gt;爱站网创始人，现为爱站网络科技有限公司CEO、搜狐SEO总顾问。&lt;/p&gt;

&lt;h2 id=&quot;李华东&quot;&gt;李华东&lt;/h2&gt;
&lt;p&gt;A5站长网SEO总监，A5首席SEO诊断师。&lt;/p&gt;

&lt;h2 id=&quot;焦宗宗&quot;&gt;焦宗宗&lt;/h2&gt;
&lt;p&gt;网名：焦大
QQ：651207990（经本人同意）
描述:11年开始做seo，先后建立seo培训联盟和seo学堂，目前独立创业，主要承接网
站seo项目合作以及seo培训。&lt;/p&gt;

&lt;h2 id=&quot;坐馆欢喜哥&quot;&gt;坐馆欢喜哥&lt;/h2&gt;

&lt;p&gt;微信：wilsonwang21&lt;/p&gt;

&lt;p&gt;1、Artand，中国艺术类社交电商门户，Alexa全球排名 39963，UV 12000 / PV 48000
2、Modesens，时尚海淘一站式聚合搜索工具，Alexa全球排名 5485，IP 36000 / PV 115200
3、FiboGroup.com，全球投资金融平台，Alexa全球排名20万位&lt;/p&gt;

&lt;h2 id=&quot;埋头苦干的兄弟姐妹&quot;&gt;埋头苦干的兄弟姐妹&lt;/h2&gt;

&lt;h2 id=&quot;刘梦晨&quot;&gt;刘梦晨&lt;/h2&gt;
&lt;p&gt;网名：FBSENDER&lt;/p&gt;

&lt;p&gt;描述：艺龙在线营销部主程。原凡客库存系统研发工程师。来艺龙开发SEM自动化投放
系统。擅长大型网站SEM投放及优化技术。现负责艺龙营销部全部技术工作及部分SEO业
务。技术强人，效率至上，逻辑思维和业务思维并重。关键词”羽毛球规则”在百度排名
稳定第一。&lt;/p&gt;

&lt;h2 id=&quot;刘铮&quot;&gt;刘铮&lt;/h2&gt;
&lt;p&gt;网名：银狐云枫&lt;/p&gt;

&lt;p&gt;QQ：42397890（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：现任一亩田SEO总监。曾任百度知识类产品SEO全线负责人。赶集SEO总监。马可波罗海外部SEO总监。经历项目：中国供应商 360圈 中国日报 28商机  6间房 PPS搜易 中华英才 九城  中国台湾网 天津网 威客网  西陆网 达芙妮&lt;/p&gt;

&lt;h2 id=&quot;唐安&quot;&gt;唐安&lt;/h2&gt;
&lt;p&gt;网名：安洋&lt;/p&gt;

&lt;p&gt;QQ：281826888&lt;/p&gt;

&lt;p&gt;5年个人站长seo经验 2010年加入4399到至今&lt;/p&gt;

&lt;p&gt;目前主要负责游戏资讯 4399手机游戏媒体网站运营总监&lt;/p&gt;

&lt;h2 id=&quot;殷晓俊&quot;&gt;殷晓俊&lt;/h2&gt;
&lt;p&gt;QQ：190714307（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：房多多市场部高级经理 流量负责人  曾就职携程，平安&lt;/p&gt;

&lt;h2 id=&quot;孙炜亮&quot;&gt;孙炜亮&lt;/h2&gt;
&lt;p&gt;QQ：26344665&lt;/p&gt;

&lt;p&gt;土豆、乐视SEO负责人，SEO内链体系获得国家专利。用数据做SEO。&lt;/p&gt;

&lt;h2 id=&quot;胡星宇&quot;&gt;胡星宇&lt;/h2&gt;
&lt;p&gt;网名：老胡&lt;/p&gt;

&lt;p&gt;软件开发多年,SEO&amp;amp;SEM多年,现主要从事数据分析,管理电子化与运营管理&lt;/p&gt;

&lt;h2 id=&quot;吴敏&quot;&gt;吴敏&lt;/h2&gt;
&lt;p&gt;QQ：131289（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：曾就职于搜狐，19楼。现任贝贝网营销合作总监。个人站长出身，SEO顾问过好
多个行业，行业人脉资源广泛，低调华丽。&lt;/p&gt;

&lt;h2 id=&quot;郭明阳&quot;&gt;郭明阳&lt;/h2&gt;
&lt;p&gt;微信：gmy229&lt;/p&gt;

&lt;p&gt;世界工厂网SEO负责人，长期深耕B2B行业&lt;/p&gt;

&lt;h2 id=&quot;杨妮娜&quot;&gt;杨妮娜&lt;/h2&gt;
&lt;p&gt;QQ：371370684（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：
现任百度海外搜索产品SEO，ASO负责人。&lt;/p&gt;

&lt;p&gt;曾任百度知识搜索产品优化(知道，文库，经验，地图)，F团SEO负责人&lt;/p&gt;

&lt;p&gt;其他项目：外贸行业，78，工控网&lt;/p&gt;

&lt;h2 id=&quot;高庆华&quot;&gt;高庆华&lt;/h2&gt;
&lt;p&gt;QQ：112143235（经本人同意）&lt;/p&gt;

&lt;p&gt;铁友网SEO负责人。06年就兼从事企业网站SEO外包服务，2010年开始负责铁友网和携
程汽车票频道，有着大站的5年SEO营销团队组建和SEO内容运营经验，在职期间2014年
因为移动端的行业趋势，我们很快跟进并参加百度无线搜索适配快速迭代上线对应的移
动频道页面，获得百度”奋斗”奖。铁友网初创期，负责过2年的产品运营部门，由于现
阶段职业瓶颈去了一家互联网创业公司专门负责产品运营部门&lt;/p&gt;

&lt;h2 id=&quot;张赵伟&quot;&gt;张赵伟&lt;/h2&gt;
&lt;p&gt;QQ：1420186160（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：现就职蘑菇街，曾花瓣网SEO负责人。&lt;/p&gt;

&lt;p&gt;百度首届移动优化大赛专家奖获得者，给花瓣网SEO流量翻了16倍。&lt;/p&gt;

&lt;h2 id=&quot;黄齐明&quot;&gt;黄齐明&lt;/h2&gt;
&lt;p&gt;QQ：1491993033（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：赢商网SEO负责人。曾任职于5U体育（原U体育），妆品网等网站SEO负责人。&lt;/p&gt;

&lt;h2 id=&quot;李卫国&quot;&gt;李卫国&lt;/h2&gt;
&lt;p&gt;QQ：294513544（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：就职于寻医问药。专业从事4年医疗SEO&lt;/p&gt;

&lt;h2 id=&quot;小黑&quot;&gt;小黑&lt;/h2&gt;
&lt;p&gt;QQ：290282086（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：互联网安全技术出身，一时迷于黑客之间，后接触SEO，有幸结识了不少圈内人
士，单页优化流量超过2W。曾就职光年论坛、京东商城。&lt;/p&gt;

&lt;h2 id=&quot;师旭&quot;&gt;师旭&lt;/h2&gt;
&lt;p&gt;QQ：544129967（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：就职于世界工厂网。专注于互联网产品设计、中英文搜索引擎优化、B2B网站运
营、企业网站SEM&lt;/p&gt;

&lt;h2 id=&quot;张洺乾&quot;&gt;张洺乾&lt;/h2&gt;
&lt;p&gt;QQ：744949589（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：原到到网（改名为猫途鹰）SEO/SEM负责人，双料选手，一个人能顶俩。平时会
写程序（Ruby语言）来辅助日常工作。&lt;/p&gt;

&lt;h2 id=&quot;张基&quot;&gt;张基&lt;/h2&gt;
&lt;p&gt;QQ：23853329（经本人同意）
描述：阿里巴巴&lt;/p&gt;

&lt;h2 id=&quot;张阳&quot;&gt;张阳&lt;/h2&gt;
&lt;p&gt;QQ：179782221（经本人同意）
描述：原zhuna.cn SEO负责人，专长于酒店行业SEO&lt;/p&gt;

&lt;h2 id=&quot;陈明鹏&quot;&gt;陈明鹏&lt;/h2&gt;
&lt;p&gt;描述：途牛PC站SEO负责人&lt;/p&gt;

&lt;h1 id=&quot;吕翠香&quot;&gt;吕翠香&lt;/h1&gt;

&lt;p&gt;QQ：361722397（经本人同意）&lt;/p&gt;

&lt;p&gt;09年从事SEO工作，曾任职于赶集网，易车网，目前就职于智联招聘&lt;/p&gt;

&lt;h2 id=&quot;张雪峰&quot;&gt;张雪峰&lt;/h2&gt;
&lt;p&gt;网名：放肆绅士&lt;/p&gt;

&lt;p&gt;QQ：53854854（经本人同意）&lt;/p&gt;

&lt;p&gt;描述:穷游网 网络营销经理，SEO、ASO负责人，擅长数据分析及A/B测试，并通过数据驱动带领团队实现每年流量增长一倍及转化率提升，积累了旅游，酒店，教育，美食，电商，招聘，社区等行业的丰富项目经验，曾任Netconcepts耐特康赛SEO项目经理，服务于艾瑞，智联招聘，优购，国航，贝太厨房，爱结，英孚教育等。&lt;/p&gt;

&lt;h2 id=&quot;章螂&quot;&gt;章螂&lt;/h2&gt;
&lt;p&gt;QQ：63224（经本人同意）
描述：天气网（tianqi.com）CEO/SEO。&lt;/p&gt;

&lt;h2 id=&quot;孙炜亮-1&quot;&gt;孙炜亮&lt;/h2&gt;
&lt;p&gt;原乐视网SEO负责人&lt;/p&gt;

&lt;h2 id=&quot;王龙&quot;&gt;王龙&lt;/h2&gt;
&lt;p&gt;QQ：280026798（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：大众养生网SEO负责人。曾就职于世邦机器。&lt;/p&gt;

&lt;h2 id=&quot;蒋孟奇&quot;&gt;蒋孟奇&lt;/h2&gt;
&lt;p&gt;QQ：975327365（经本人同意）&lt;/p&gt;

&lt;p&gt;酷讯搜索营销主管，擅长SEO、SEM、ASO等相关领域&lt;/p&gt;

&lt;h2 id=&quot;贪狼&quot;&gt;贪狼&lt;/h2&gt;
&lt;p&gt;土巴兔SEO负责人&lt;/p&gt;

&lt;h2 id=&quot;吴嘉阳&quot;&gt;吴嘉阳&lt;/h2&gt;
&lt;p&gt;QQ：718831725（经本人同意）
描述：Digital marketing and consumer experience focused.
Passionate about online marketing and consulting. Seeking to combine digital marketing skills with international background
in a leading technology company. Self motivated, good working in team. Proficient knowledge of SEO,PPC Ads(Google Adwords),Display ADs.&lt;/p&gt;

&lt;h2 id=&quot;王建中&quot;&gt;王建中&lt;/h2&gt;
&lt;p&gt;上海刻缘营销创始人；上海蔚为医美副总&lt;/p&gt;

&lt;h2 id=&quot;袁大吉&quot;&gt;袁大吉&lt;/h2&gt;
&lt;p&gt;QQ：61866257（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：39健康网  流量合作seo总监 8年seo经验，曾负责多个b2c ，b2b，金融门户
网站优化，也有丰富的站群流量站优化经验！！&lt;/p&gt;

&lt;h2 id=&quot;周文军&quot;&gt;周文军&lt;/h2&gt;
&lt;p&gt;QQ：252087418（经本人同意）&lt;/p&gt;

&lt;p&gt;阿里巴巴&lt;/p&gt;

&lt;h2 id=&quot;黄达和&quot;&gt;黄达和&lt;/h2&gt;
&lt;p&gt;网名：小二&lt;/p&gt;

&lt;p&gt;QQ：1290505352&lt;/p&gt;

&lt;p&gt;描述：99健康网SEO负责人。曾任职于火车网，品牌网，&lt;/p&gt;

&lt;h2 id=&quot;金鑫&quot;&gt;金鑫&lt;/h2&gt;
&lt;p&gt;QQ：19516833（经本人同意）&lt;/p&gt;

&lt;p&gt;337网&lt;/p&gt;

&lt;p&gt;8年海内外搜索营销经验，业内人脉丰富。&lt;/p&gt;

&lt;h2 id=&quot;吕令建&quot;&gt;吕令建&lt;/h2&gt;
&lt;p&gt;E-mail: lvlingjian@yeah.net&lt;/p&gt;

&lt;p&gt;大家称之为令建，山东泰安人，现居北京。专注于大型网站的SEO流量提升，对十万百
万千万级流量的网站有独特的手法。先后任职于慧聪网，去哪儿，负责整体SEO工作。
不爱露面的SEO工作者。&lt;/p&gt;

&lt;h2 id=&quot;泡面&quot;&gt;泡面&lt;/h2&gt;
&lt;p&gt;描述：本地宝联合创始人，总编辑，seo负责人，多年SEO实战经验。&lt;/p&gt;

&lt;h2 id=&quot;无天&quot;&gt;无天&lt;/h2&gt;
&lt;p&gt;OurSEO站长，专注企业网站SEO优化、网络推广、品牌营销，挖掘、研究SEO。无天此博客，是一个关注互联网，关注网站运营、搜索优化、营销策划、用户体验的IT博客。&lt;/p&gt;

&lt;h2 id=&quot;林国平&quot;&gt;林国平&lt;/h2&gt;
&lt;p&gt;网名：乱发型&lt;/p&gt;

&lt;p&gt;QQ：1935959013（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：就职于4399。有4，5年SEO经验&lt;/p&gt;

&lt;h2 id=&quot;姚磊&quot;&gt;姚磊&lt;/h2&gt;
&lt;p&gt;QQ：283146795（经本人同意）&lt;/p&gt;

&lt;p&gt;网名：大姚&lt;/p&gt;

&lt;p&gt;描述：多特软件站seo负责人，曾就职于购酒网，热衷于B2C运营和推广。&lt;/p&gt;

&lt;h2 id=&quot;杨文军&quot;&gt;杨文军&lt;/h2&gt;
&lt;p&gt;网名：魔法师&lt;/p&gt;

&lt;p&gt;email：yangwenjun61@sina.com（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：现就职于考拉FM，负责PC端流量。曾就职于淘房网、云通讯平台、中国网库。擅长SEO、网络营销、品牌推广。&lt;/p&gt;

&lt;h2 id=&quot;磊子&quot;&gt;磊子&lt;/h2&gt;
&lt;p&gt;描述：就职爱奇艺，激动网，视频seo爱好者&lt;/p&gt;

&lt;h2 id=&quot;王润&quot;&gt;王润&lt;/h2&gt;
&lt;p&gt;QQ：398872331（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：什么值得买SEO和数据分析负责人&lt;/p&gt;

&lt;h2 id=&quot;程堂军&quot;&gt;程堂军&lt;/h2&gt;
&lt;p&gt;QQ：87621304（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：58安居客高级流量经理，负责SEO流量，及其它免费流量。&lt;/p&gt;

&lt;h2 id=&quot;马如意&quot;&gt;马如意&lt;/h2&gt;
&lt;p&gt;网名：如意&lt;/p&gt;

&lt;p&gt;QQ：651324810（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：曾负责新浪乐居SEO/SEM、百度乐居房产网站SEO工作。&lt;/p&gt;

&lt;h2 id=&quot;肖洁纯&quot;&gt;肖洁纯&lt;/h2&gt;
&lt;p&gt;网名：洁纯&lt;/p&gt;

&lt;p&gt;QQ:305624763（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：现就职拉手网SE0主管一职，曾任职新东方，负责新东方集团SEO优化。
经历项目：新东方（新东方宝典）、拉手网商家库&lt;/p&gt;

&lt;h2 id=&quot;苏云田&quot;&gt;苏云田&lt;/h2&gt;
&lt;p&gt;网名：亦奇&lt;/p&gt;

&lt;p&gt;QQ：182185871（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：500彩票seo负责人。6年seo。曾就职环球资源、亚太传媒集团。&lt;/p&gt;

&lt;h2 id=&quot;王秀杰&quot;&gt;王秀杰&lt;/h2&gt;
&lt;p&gt;描述：就职于中关村在线，主要负责中关村在线论坛、下载等相关业务。&lt;/p&gt;

&lt;h2 id=&quot;贺涛&quot;&gt;贺涛&lt;/h2&gt;
&lt;p&gt;网名：wnipai&lt;/p&gt;

&lt;p&gt;QQ：345311821（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：2013年加入百姓网，14年开始以数据分析师的角度开始接触SEO，现在负责百姓网SEO的运营。&lt;/p&gt;

&lt;h2 id=&quot;张化祥&quot;&gt;张化祥&lt;/h2&gt;
&lt;p&gt;网名：SEO祥子&lt;/p&gt;

&lt;p&gt;QQ：236213140（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：曾任职于Netconcepts、悠易互通广告有限公司，现负责新浪乐居SEO工作。主
要技能SEO，熟悉SEM、DSP、广点通、社会化媒体等营销推广。&lt;/p&gt;

&lt;h2 id=&quot;stevezhou&quot;&gt;Stevezhou&lt;/h2&gt;
&lt;p&gt;QQ：1185521130（由其好基友推荐）&lt;/p&gt;

&lt;p&gt;没有天份 还剩天真。&lt;/p&gt;

&lt;p&gt;技术派SEO；规划驴妈妈产品端总体SEO布局与运营，成绩显赫；构建SEO管理系统（全
站TKD管理、内链、友链等）以及工具系统（日志、需求词库、排名等）、其中研发的
排名工具速度和实用性值得称赞。怀着一份情怀，寻找方向的家伙，希望能遇见志同道
合的小伙伴。博客地址stevezhou.info。工具地址：tool.stevezhou.info(鉴于
保密协议，日志数据已下线）&lt;/p&gt;

&lt;h2 id=&quot;王敏&quot;&gt;王敏&lt;/h2&gt;
&lt;p&gt;网名：王威廉
QQ：373570383（经本人同意）
描述：就职好未来，负责K12站群SEO/ASO工作。&lt;/p&gt;

&lt;h2 id=&quot;道哥&quot;&gt;道哥&lt;/h2&gt;
&lt;p&gt;微信：seodug（经本人同意）
QQ：59037148（经本人同意）
《SEO深度解析》第二版联合作者&lt;/p&gt;

&lt;h2 id=&quot;赵彦刚&quot;&gt;赵彦刚&lt;/h2&gt;
&lt;p&gt;微信：zygseo（经本人同意）
描述：原中公网校SEO负责人，个人站长出身，懂点技术。个人博客(seojishu.com)曾在业内
被转载数十万次，微信订阅号(seozyg)。强调以数据为驱动，以结果为导向。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhanzhang.baidu.com/college/articleinfo%3Fid%3D487&quot;&gt;ETag使用效果对比&amp;amp;经验分享&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhanzhang.baidu.com/college/articleinfo%3Fid%3D849&quot;&gt;SEOer在部门沟通中常见问题及建议&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhanzhang.baidu.com/college/articleinfo%3Fid%3D874&quot;&gt;新站如何被百度快速收录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;吴秀龙&quot;&gt;吴秀龙&lt;/h2&gt;
&lt;p&gt;QQ：1009926370（经本人同意）&lt;/p&gt;

&lt;p&gt;微信：longhua0612（经本人同意）&lt;/p&gt;

&lt;p&gt;描述：负责中公教育集团SEO、优就业SEO研究院院长，专注教育行业SEO研究分析，同时涉足电商、酒店旅游、社交问答等领域。&lt;/p&gt;

&lt;h2 id=&quot;王保良&quot;&gt;王保良&lt;/h2&gt;
&lt;p&gt;QQ：1285294056&lt;/p&gt;

&lt;p&gt;微信：happywbl&lt;/p&gt;

&lt;p&gt;描述：中国制造交易网 SEO负责人。&lt;/p&gt;

&lt;h2 id=&quot;刀心&quot;&gt;刀心&lt;/h2&gt;
&lt;p&gt;QQ：1136018016&lt;/p&gt;

&lt;p&gt;描述： 曾负责寺库secoo.com的SEO。多年个人站长经验，操作过数20万PV的个人站。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;最后，本人：&lt;/p&gt;

&lt;p&gt;微信&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;628552&lt;/code&gt;，注明来意。不收徒。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/thaddeus-liu&quot;&gt;https://www.linkedin.com/in/thaddeus-liu&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Aug 2020 00:00:00 +0800</pubDate>
        <link>https://geekplayers.com/china-seo-experts-and-famous.html</link>
        <guid isPermaLink="true">https://geekplayers.com/china-seo-experts-and-famous.html</guid>
        
        <category>seo</category>
        
        <category>排行榜</category>
        
        
        <category>seo</category>
        
      </item>
    
      <item>
        <title>面试题测试</title>
        <description>&lt;section id=&quot;categories&quot;&gt;

  &lt;p&gt;Markdown部分&lt;/p&gt;

  &lt;p&gt;A list of categories:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;foo&lt;/li&gt;
    &lt;li&gt;bar&lt;/li&gt;
  &lt;/ul&gt;

&lt;/section&gt;

&lt;div id=&quot;html&quot;&gt;
    &lt;p&gt;HTML部分&lt;/p&gt;

    &lt;section style=&quot;width: 100%;vertical-align: top;box-sizing: border-box;&quot;&gt;
        &lt;section style=&quot;text-align: left;font-size: 14px;color: rgb(95, 104, 117);box-sizing: border-box;&quot;&gt;
            &lt;p style=&quot;box-sizing: border-box;&quot;&gt;
                &lt;strong style=&quot;box-sizing: border-box;&quot;&gt;点击方框，查看答案&lt;/strong&gt;
            &lt;/p&gt;
        &lt;/section&gt;

        &lt;section style=&quot;text-align: center;margin-right: 0%;margin-bottom: 10px;margin-left: 0%;box-sizing: border-box;&quot;&gt;
            &lt;section style=&quot;height: 200px;vertical-align: top;overflow: hidden;border-radius: 0px;border-width: 0px;border-style: none;border-color: rgb(62, 62, 62);box-shadow: rgb(255, 193, 7) 0px 0px 0px;box-sizing: border-box;&quot;&gt;
                &lt;section style=&quot;box-sizing: border-box;&quot;&gt;
                    &lt;section style=&quot;width: 100%;vertical-align: top;overflow: hidden;align-self: flex-start;font-family: -apple-system-font, BlinkMacSystemFont, ‘Helvetica Neue‘, ‘PingFang SC‘, ‘Hiragino Sans GB‘, ‘Microsoft YaHei UI‘, ‘Microsoft YaHei‘, Arial, sans-serif;letter-spacing: 0.034em;box-sizing: border-box;&quot;&gt;
                        &lt;section style=&quot;height: 0px;overflow: visible;box-sizing: border-box;&quot;&gt;
                            &lt;section style=&quot;width: 100%;vertical-align: top;box-sizing: border-box;&quot;&gt;
                                &lt;section style=&quot;text-align: left;box-sizing: border-box; border-width: 1px; border-color:lightgrey; border-style: solid;&quot;&gt;
                                    &lt;p style=&quot;box-sizing: border-box; &quot;&gt;
                                        本题答案便是我啦，哈哈~
                                    &lt;/p&gt;
                                &lt;/section&gt;
                            &lt;/section&gt;
                        &lt;/section&gt;
                        &lt;section style=&quot;height: 0px;overflow: visible;box-sizing: border-box;&quot;&gt;
                            &lt;section style=&quot;width: 100%;vertical-align: top;height: auto;box-sizing: border-box;&quot;&gt;
                                &lt;section style=&quot;height: 0px;box-sizing: border-box;&quot;&gt;
                                    &lt;svg opacity=&quot;1&quot; style=&quot;box-sizing: border-box;transform: rotateZ(0deg);background-size: contain;background-repeat: no-repeat;background-position: 50% 50%;background-color: rgb(254, 254, 254);width: 100%; background:lightblue;&quot; viewBox=&quot;0 0 100 100&quot; width=&quot;0&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;

                                        &lt;animate style=&quot;box-sizing: border-box;&quot; fill=&quot;freeze&quot; attributeName=&quot;opacity&quot; begin=&quot;click&quot; from=&quot;1&quot; to=&quot;0&quot; dur=&quot;0.3&quot; restart=&quot;never&quot;&gt;&lt;/animate&gt;
                                        &lt;animate style=&quot;box-sizing: border-box;&quot; fill=&quot;freeze&quot; attributeName=&quot;width&quot; begin=&quot;click + 0.3s&quot; from=&quot;1&quot; to=&quot;0&quot; dur=&quot;0.01&quot; restart=&quot;never&quot;&gt;&lt;/animate&gt;
                                    &lt;/svg&gt;
                                &lt;/section&gt;

                            &lt;/section&gt;
                        &lt;/section&gt;
                        &lt;section style=&quot;height: 0px;padding-top: 100%;box-sizing: border-box;line-height: 0;&quot;&gt;
                            &lt;section style=&quot;line-height: 0;width: 0px;&quot;&gt;&lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;vertical-align:top;&quot;&gt;&lt;/svg&gt;&lt;/section&gt;
                        &lt;/section&gt;
                    &lt;/section&gt;
                &lt;/section&gt;
            &lt;/section&gt;
        &lt;/section&gt;
    &lt;/section&gt;

&lt;/div&gt;
</description>
        <pubDate>Sun, 16 Aug 2020 00:00:00 +0800</pubDate>
        <link>https://geekplayers.com/interview-test.html</link>
        <guid isPermaLink="true">https://geekplayers.com/interview-test.html</guid>
        
        <category>面试题</category>
        
        
        <category>[&quot;面试题&quot;]</category>
        
        <category>[&quot;面试题&quot;]</category>
        
        <category>面试题</category>
        
      </item>
    
      <item>
        <title>如何看待媒体称「字节跳动同意放弃TikTok股份，以达成在美交易」？会给中国互联网带来哪些影响？</title>
        <description>&lt;h1 id=&quot;如何看待媒体称字节跳动同意放弃tiktok股份以达成在美交易会给中国互联网带来哪些影响&quot;&gt;如何看待媒体称「字节跳动同意放弃TikTok股份，以达成在美交易」？会给中国互联网带来哪些影响？&lt;/h1&gt;

&lt;p&gt;2020年8月2日&lt;/p&gt;

&lt;h2 id=&quot;大可不必为tiktok感到悲伤&quot;&gt;大可不必为TikTok感到悲伤&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;特别是，当张一鸣及字节跳动意识到美国聪明、小器、务实、无耻的操作方式之后，是否会对于一个国家的价值力量与精神意志的必要性，产生更高的依赖感与真正的敬意。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/zhzz2020e4vir.jpg&quot; alt=&quot;如何看待媒体称「字节跳动同意放弃 TikTok 股份，以达成在美交易」？会给中国互联网带来哪些影响？-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;是否会对帝国主义的吞噬一切的靠谱的历史叙事的脉络，有着更深刻的认知与感触。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/zhzz2020jb7lp.jpg&quot; alt=&quot;如何看待媒体称「字节跳动同意放弃 TikTok 股份，以达成在美交易」？会给中国互联网带来哪些影响？-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对于张一鸣这样的精英阶层中涌现出来的杰出资本家而言，这是一次极为震撼的洗礼和国家教育，只是其导师来自于他不曾防备和怀疑的帝国主义对象。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但结果似乎并不乐观，字节跳动在面对来自强权的逼迫状态时，选择了经济上成本最低的一种手段，即立刻服输，不愿通过斗争，来继续损耗自身的资源沉淀。&lt;/p&gt;

&lt;p&gt;但这也意味着，在政治语境中，字节跳动完全失去了独立的【政治语言表达】的能力和自主价值。它就像自我抽取了脊梁和血肉的一滩商业模式的脓水一样，顺势自流。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;商业上一贯追求纯粹理性的字节跳动，似乎并不需要额外的民族情绪的支撑和同情。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;因此，它也丝毫不准备为这种情绪的回报投入任何具有价值的成本支付。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;帝国主义的基本特征，就是以国家力量为主导的垄断的资本主义。&lt;/p&gt;

&lt;p&gt;生产和资本的集中发展到这样高的程度，以致造成了在经济生活中起决定作用的垄断组织。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;但为了维护绝对的国家统治，帝国主义国家，既不允许国内过于集中的唯一垄断组织导致某一经济结构下的流动性的彻底失衡，更不允许其他国家进入的资本力量构建对于内生的垄断集团的赤裸裸的威胁。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因此，特朗普透露出的行政命令看起来疯狂和无耻，实质上，他不过是充当了美国互联网垄断集团力量扩张和防御的国家意志的代表和打手罢了。&lt;/p&gt;

&lt;p&gt;换一个民主党的领袖，TikTok的命运，依然不会过于乐观。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;字节跳动，一直抱有一种它们与华为不同的幻想。认为只要用游说集团讲明自身的无权力性的纯粹市场活动，就可以逃脱掉这种吞噬。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;殊不知，美帝国主义历史积累的傲慢与盲目性，早就构建出了自身的审判意志与超越国际秩序的制裁之刃。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在这种时刻，中国资本的市场立场，本质上就是它们政治立场的直接呈现和被迫反馈。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/zhzz2020pqw7i.jpg&quot; alt=&quot;如何看待媒体称「字节跳动同意放弃 TikTok 股份，以达成在美交易」？会给中国互联网带来哪些影响？-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们可以理解的是，TikTok在寻求资本扩张的道路上，不希望沾染任何商业之外的麻烦。它就像一台资本机器一样，没有任何政治属性、社会意识形态特征，而只有任凭调配的工具属性。&lt;/p&gt;

&lt;p&gt;见山拜山，见佛拜佛。在哪片土地上，就供养哪片土地上的真神。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;但问题是，它的一览无余的无所表态意愿，恰恰成为一种最鲜明的政治表态。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;它愿意成为最纯粹的资本，尽管其他资本也是保有这种意愿，但其他资本并不会刻意与社会政治的秩序变化，表达隔离与割裂主张。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;由此，TikTok不仅成为最纯粹的资本主体，更意味着它在走向成为完全顺从于所在区域政治立场的无原则方向的急不可耐之中。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这样的资本表达，在国家强大的时候，它自然是支持国家的。但当国家衰落时，它就会首先从其资本力量的利益立场来看待其需要屈从的对象，且毫不在意对于国家的背叛。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我们应当永远警惕和保持注意的，正是这种急切的与政治做完全切割，却实质上只是在表达对于强大统治者屈从而非保持自身中立性的资本结构。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;它的强大，对于民族利益往往缺乏实质性意义，因为它从来不以此为目的。它的扩张，只会注重带来自身体量的增长，从而让国内的政治场域更为依赖自身，而不是反之更好地维护国内政治立场的坚定性。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;不管是哪种理由，资本扩张后的意识形态变异特征，已然是凸显出来了。&lt;/p&gt;

&lt;p&gt;这在中国资本越来越多的走出去后，已经成为了介于公共语境之中的一种必然的新博弈趋势。&lt;/p&gt;

&lt;p&gt;在美国肆无忌惮、横行无耻的打压与羞辱下，大部分中国人民，早已放弃了幻想。&lt;/p&gt;

&lt;p&gt;但驱动着中国资本力量扩张的背后精英群体，却往往由于与美国内部交往的体面接触，而浅薄的认定双方之间没有绝对的利益冲突。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;他们依然站立在，以自身为中心的小视野中的利益冲突爆发的不可知的退缩和自我安慰的欺骗立场上。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;他们仍然没有绝对的、富有决心的站在以国家为中心的真正的世界视野和历史叙事的路径上，看待目前的一切局势。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果资本及资本群体不丢弃幻想，中国的真正胜利就永远需要防范和警惕这些精神意志脆弱的容易被欺骗、收买、逼迫和最终反叛的可能。&lt;/p&gt;

&lt;p&gt;作者：南柯遊人&lt;/p&gt;

&lt;p&gt;来源：知乎&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Aug 2020 00:00:00 +0800</pubDate>
        <link>https://geekplayers.com/view-on-bytedance-agree-to-sell-tiktok.html</link>
        <guid isPermaLink="true">https://geekplayers.com/view-on-bytedance-agree-to-sell-tiktok.html</guid>
        
        <category>tiktok</category>
        
        <category>字节跳动</category>
        
        
        <category>[&quot;tiktok&quot;, &quot;字节跳动&quot;, &quot;社会价值观&quot;]</category>
        
        <category>[&quot;tiktok&quot;, &quot;字节跳动&quot;, &quot;社会价值观&quot;]</category>
        
        <category>tiktok</category>
        
        <category>字节跳动</category>
        
        <category>社会价值观</category>
        
      </item>
    
      <item>
        <title>Visual Studio的智能感应代码段</title>
        <description>&lt;p&gt;文/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Patrick Gallucci&lt;/code&gt; 编译/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;崔建海&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Visual Studio 2005 IntelliSense Code Snippets
This article introduces Visual Studio 2005IntelliSense code snippets that enable you to create y our own IntelliSense snippets without leaving the Visual Studio IDE. This ability boosts productivity by allowing you to create and insert samples of code that you use regularly. It also allows custom code dev elopers to provide snippet examples of their own libraries and APIs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本文介绍了Visual Studio2005 的智能感应代码段功能， 它可以使您方便地创建并插入常用的代码，还可以对开发工具进行定制，以便为特定库和API 产生代码段。&lt;/p&gt;

&lt;p&gt;代码动态生成已经不是什么新鲜事物了，您可以找到只要按一个按钮就可以产生几万行代码的工具。其中有些工具设计得非常灵活，以至于可以自由修改模板中的记号，甚至模板本身，以便对代码输出进行更好的控制。
我老早就想在程序代码中嵌入自动生成代码的“块”，而不是调用一个外部工具或者打开Visual Studio 的附加选项。这就是智能感应代码段（code snippet）可以做的事情。虽然它们的功能没有某些专门的工具强大，它们依然可以为程序员日复一日的工作提供不少帮助。&lt;/p&gt;

&lt;p&gt;Visual Studio 2005 的智能感应代码段允许您在IDE中创建自己的代码段。这可以使您方便地创建并插入常用的代码，还可以对开发工具进行定制，以便为特定库和API产生代码段。（见下页表1）&lt;/p&gt;

&lt;h2 id=&quot;从简单的开始&quot;&gt;从简单的开始&lt;/h2&gt;

&lt;p&gt;要使用代码段功能，只要在代码窗口单击右键然后选择“Insert Snippet”就可以了。
根据文件类型不同，您可以看到当前可用的代码段类型。本例使用C#文件，所以您可以看到两个选项：Office Development 和 Visual C#。
您选择一种类型以后，就列出了这个类型下可以使用的代码段。这些列表可能发生变化，比如您修改了原有代码段或者添加了自己的代码段。
通过选择合适的代码段名称，您可以将所需的代码段插入代码窗口的适当位置。以C#为例，选择ctor，也就是为您的类生成构造函数的代码段。鼠标点击ctor标签以后，您所需要的代码就插到了您最初单击右键的位置。现在，您可以到ctor代码段的文件中去探索一番了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip07.jpg&quot; alt=&quot;Figure 7: Title and Header Elements in the Code Snippets Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;代码片断中的元素现在来看看怎样创建一个代码段。您可以在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snippetformat.xsd&lt;/code&gt; 中找到代码段的schema 。
CodeSnippets 是这个schema的根元素，它可以包含一个或者多个CodeSnippet 子元素。
CodeSnippet 包含两个子元素和一个可选的格式属性。格式属性提供了一种可以定义代码段版本的机制。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;CodeSnippet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Format=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0.1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Header&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Header&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Snippet&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Snippet&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/CodeSnippet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Header元素包含代码段的一般信息，每个代码段只能包含一个。这个元素的子元素有：Title，Author，Description，HelpUrl，SnippetTypes，Keyword和Shortcut：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Author&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Author&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;HelpUrl&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/HelpUrl&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetTypes&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Keywords&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Keywords&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Shortcut&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Shortcut&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Header&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面是ctor代码段文件中的Header：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;ctor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Shortcut&amp;gt;&lt;/span&gt;ctor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Shortcut&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;Code snippet for constructor
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Author&amp;gt;&lt;/span&gt;Microsoft Corporation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Author&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetType&amp;gt;&lt;/span&gt;Expansion&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetType&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetTypes&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Header&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;所有这些元素都具有不错的自解释能力。HelpUrl是一个指向额外帮助信息文档的指针。SnippetTypes指示Visual Studio 2005 如何将代码段插入代码窗口。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetType&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetType&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetType&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetType&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果没有类型信息，该代码段就可以插入任意的文件。下
面是合法的SnippetType值：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SurroundsWith: 将代码段放入被选定的代码片段的周围。&lt;/li&gt;
  &lt;li&gt;Expansion:  将代码段插入光标所在位置。&lt;/li&gt;
  &lt;li&gt;Refactoring:  在Visual C# 的refactoring 过程中使用代码段 (Refactoring 无法用于通常的代码段)。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为Refactoring 无法用于通常的代码段，所以只剩下了SruuoundsWith和Expansion。要用SruuoundsWith，您必须先选中要包围的文本。选中您要包围的文本以后，单击鼠标右键选择合适的代码段。这个例子选择的是region代码段，代码被#region和#endregion标签包围起来了，还可以注意到缺省置换字符串MyRegion已处于选中状态以方便修改。如果您要做更多的替换工作，只需按tab键移到下一个要修改的目标。这个特性提高了维护代码段的速度。Expansion代码段只是简单的将代码段插入光标所在的位置。
Keywords 元素可以包含一个或者多个子元素，以便Visual Studio 和别的代码段提供者用标准化的方式检索这些代码段。最后是Shortcut 元素，它提供了一种特性，可以让您通过键入一个快捷方式然后按tab键就可以插入一个代码段。这个结合expansion类型的代码段使用非常有效。&lt;/p&gt;

&lt;p&gt;现在可以看看Snippet 元素，这个元素定义了代码段的代码。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Snippet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;References&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/References&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Imports&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Imports&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Declarations&amp;gt;&lt;/span&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Declarations&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Code&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Code&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Snippet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面是ctor的snippet 节点：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Snippet&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Declarations&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Literal&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Editable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;classname&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ID&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ToolTip&amp;gt;&lt;/span&gt;Class name
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ToolTip&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Function&amp;gt;&lt;/span&gt;ClassName()
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Function&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Default&amp;gt;&lt;/span&gt;
            ClassNamePlaceholder
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Default&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Literal&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Declarations&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Code&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;csharp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[public $classname$ ()
        {
            $end$
        }]]&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Code&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Snippet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;References 元素只在Visual Basic代码段中有效。该元素可选，包含代码段可能用到的别的库的引用信息。
它有两个子元素：Assembly 是dll 的位置，Url 是有关assembly说明信息的链接。&lt;/p&gt;

&lt;p&gt;表1：Visual Studio 2005智能感应目前支持的代码段列表&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;描述信息&lt;/th&gt;
      &lt;th&gt;适用范围&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;#if&lt;/td&gt;
      &lt;td&gt;生成#if和#endif指示符&lt;/td&gt;
      &lt;td&gt;任何地方&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;#region&lt;/td&gt;
      &lt;td&gt;生成#region 和#endregion 指示符&lt;/td&gt;
      &lt;td&gt;任何地方&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;～&lt;/td&gt;
      &lt;td&gt;为类生成析构函数&lt;/td&gt;
      &lt;td&gt;类内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;attribute&lt;/td&gt;
      &lt;td&gt;生成一个从Attribute 派生的类的声明&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;checked&lt;/td&gt;
      &lt;td&gt;生成一个checked块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;生成一个类声明&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ctor&lt;/td&gt;
      &lt;td&gt;为一个类生成一个构造函数&lt;/td&gt;
      &lt;td&gt;类内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cw&lt;/td&gt;
      &lt;td&gt;生成一个WriteLine 调用&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;do&lt;/td&gt;
      &lt;td&gt;生成一个do while 循环&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;else&lt;/td&gt;
      &lt;td&gt;生成一个else 块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;enum&lt;/td&gt;
      &lt;td&gt;生成一个enum 声明&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;equals&lt;/td&gt;
      &lt;td&gt;生成一个函数声明，覆盖Object 类中定义的Equals 函数&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exception&lt;/td&gt;
      &lt;td&gt;生成一个从异常派生出来的类的声明（缺省情况从Exception   派生）&lt;/td&gt;
      &lt;td&gt;命名空间内(包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;for&lt;/td&gt;
      &lt;td&gt;生成一个for 循环&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;foreach&lt;/td&gt;
      &lt;td&gt;生成一个foreach 循环&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;forr&lt;/td&gt;
      &lt;td&gt;生成一个for 循环，循环变量递减&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;if&lt;/td&gt;
      &lt;td&gt;生成一个if 块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;indexer&lt;/td&gt;
      &lt;td&gt;生成一个索引器声明&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;interface&lt;/td&gt;
      &lt;td&gt;生成一个接口声明&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;invoke&lt;/td&gt;
      &lt;td&gt;生成一个安全调用事件的块&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iterator&lt;/td&gt;
      &lt;td&gt;生成一个iterator&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;iterindex&lt;/td&gt;
      &lt;td&gt;通过适用嵌套类生成一个命名的迭代器和索引器对&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lock&lt;/td&gt;
      &lt;td&gt;生成一个 lock 块&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mbox&lt;/td&gt;
      &lt;td&gt;生成一个System.Windows.Forms.MessageBox.Show   调用&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;namespace&lt;/td&gt;
      &lt;td&gt;生成一个 namespace 声明&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;prop&lt;/td&gt;
      &lt;td&gt;生成一个属性声明和一个对应的底层字段&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;propg&lt;/td&gt;
      &lt;td&gt;生成一个只带get 访问器的属性声明和一个对应的底层字段&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sim&lt;/td&gt;
      &lt;td&gt;生成一个static int Main 方法声明&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;struct&lt;/td&gt;
      &lt;td&gt;生成一个 struct 声明&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;svm&lt;/td&gt;
      &lt;td&gt;生成一个static void Main 方法声明&lt;/td&gt;
      &lt;td&gt;命名空间内 (包括全局命名空间),类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;switch&lt;/td&gt;
      &lt;td&gt;生成一个switch 块&lt;/td&gt;
      &lt;td&gt;类或者结构内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;try&lt;/td&gt;
      &lt;td&gt;生成一个try 块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tryf&lt;/td&gt;
      &lt;td&gt;生成一个tryf 块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;unchecked&lt;/td&gt;
      &lt;td&gt;生成一个unchecked块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;unsafe&lt;/td&gt;
      &lt;td&gt;生成一个unsafe 块&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;using&lt;/td&gt;
      &lt;td&gt;生成一个using 指示符&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;while&lt;/td&gt;
      &lt;td&gt;生成一个while 循环&lt;/td&gt;
      &lt;td&gt;方法，索引器，属性访问器，时间访问器内&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip01.jpg&quot; alt=&quot;Figure 1: Access Code Snippets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip02.jpg&quot; alt=&quot;Figure 2: Available Types of Snippets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip03.jpg&quot; alt=&quot;Figure 3: Available Snippets in Visual C#&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Imports元素包含代码段可能用到的命名空间的信息。它的效果和您在代码中直接使用import 一样。它只有一个子元素namespace。
Declarations 元素可以定义变量，这些变量可以替换代码段中code 元素中的内容。Literal 和Object 是两种替换。Literal替换已知的类型，例如：字符串，数字，日期。Object 在代码段外部定义。
Literal元素有一个Editable属性，它决定在代码段插入以后，您是否可以修改literal的值。缺省值是True。下面是其余元素的说明：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Default (必备元素): 指定插入代码段时literal的缺省值。 Literal 元素必须包含一个Default 元素。&lt;/li&gt;
  &lt;li&gt;Function (可选元素): 指定一个literal在Visual Studio 中 获得焦点以后执行的函数。 Literal元素可以包含零个或者一个  Function元素。&lt;/li&gt;
  &lt;li&gt;ID(必备元素): 指定literal的唯一ID，一个Literal有且只  能有一个ID 元素。&lt;/li&gt;
  &lt;li&gt;Tooltip(可选元素): 描述literal期望的值和用途。一个  literal 可以有零个或者一个Tooltip 元素。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Function元素有四个可用的预处理函数,这些函数可以返回一些非常有趣的结果。它们是：GenerateSwitchCases(EnumerationLiteral)，ClassName()，SimpleTypeName(TypeName)，
  CallBase(Parameter)。它们分别返回一个唯一的结果，都非常值 得认真研究。
  现在来看看code元素，这里将放置您实际的代码，通过使 用置换变量您可以输出期望的文本。Code 元素有三个属性，没有子元素。这些属性分别是：kind，delimiter，language。Delimiter的缺省值是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;。这个符号分割代码段中的文本和对象变量。Language属性是必备属性，可以有以下值：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;VB: Visual Basic 类型的代码段&lt;/li&gt;
  &lt;li&gt;CSharp: Visual C# 类型的代码段&lt;/li&gt;
  &lt;li&gt;VJSharp: Visual J# 类型的代码段&lt;/li&gt;
  &lt;li&gt;XML: XML 类型的代码段
这个属性指明语言的类型。实际的代码是由CDATA包围的文本。也就是说以文本字符串的形式出现。下面是ctor代码段的内容：
    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Code&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;csharp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[public $classname$ ()
{
	$end$
}]]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Code&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以，只要仔细看代码段的输出结果，您就可以轻易的分析出IDE是怎么工作和为什么这么工作的：&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;language属性指明语言是C#。&lt;/li&gt;
  &lt;li&gt;code 元素从CDATA开始，然后是public。&lt;/li&gt;
  &lt;li&gt;置换变量&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$classname$&lt;/code&gt; 将被替换为函数ClassName()返回的结果，然后是类名称后的两个括号。就像您看到的一样，置换发生的位置和置换变量的位置一致，并且基于光标所处的位置。这个也受到Visual Studio 2005 中C#语言格式设置的影响。&lt;/li&gt;
  &lt;li&gt;接下来的行有一个开始大括号，下一行是一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$end$&lt;/code&gt;，再下一行是结束大括号。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$end$&lt;/code&gt;是预先定义好的Literals变量之一，用于指明一行或者一个语句的结束。当用户按回车键结束编辑以后，这个变量决定脱字符号（^）的位置。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;该创建自己的代码段了&quot;&gt;该创建自己的代码段了&lt;/h2&gt;
&lt;p&gt;现在您可以创建一个简单的代码段了。因为所有的代码都必须有文档，所以您可以按照自己的需要创建一个“头文件代码段”。然后您可以在这个代码段的基础上稍作修改扩展成别的代码段。假如您想利用您的代码段生成如下代码：&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// File: test.cs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Date: 17 Oct 2005&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Author: Patrick Gallucci&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Description: This is a test file used to&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// demonstrate Code Snippets&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Copyright (C) Developer.com.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// All rights reserved.&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我预先定义了四个字面文本变量用于替换模板中的字符串。
Classname 将会是文件名的前缀。Author将会被&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$author$&lt;/code&gt; 变量替换。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$date$&lt;/code&gt;变量将会替换创建日期和历史日期，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$company$&lt;/code&gt;变量替换Developer.com。以下是最终的代码段XML 文件。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;CodeSnippets&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;CodeSnippet&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Format=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Header&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;c#header&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ShortCut&amp;gt;&lt;/span&gt;c#header&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ShortCut&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;Code snippet for file header&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Author&amp;gt;&lt;/span&gt;Developer.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Author&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetType&amp;gt;&lt;/span&gt;Expansion&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SnippetType&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;SnippetTypes&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Header&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;Snippet&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Declarations&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Literal&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;classname&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ToolTip&amp;gt;&lt;/span&gt;The class name of the file.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ToolTip&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Function&amp;gt;&lt;/span&gt;ClassName()&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Function&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Default&amp;gt;&lt;/span&gt;ClassNamePlaceholder&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Default&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Literal&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Literal&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;author&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ToolTip&amp;gt;&lt;/span&gt;The developer who created the file.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ToolTip&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Default&amp;gt;&lt;/span&gt;Patrick Gallucci&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Default&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Literal&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Literal&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;date&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ToolTip&amp;gt;&lt;/span&gt;The date the file was created.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ToolTip&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Default&amp;gt;&lt;/span&gt;Now&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Default&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Literal&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;Literal&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ID&amp;gt;&lt;/span&gt;company&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ToolTip&amp;gt;&lt;/span&gt;The company who owns the class.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ToolTip&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Default&amp;gt;&lt;/span&gt;Developer.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Default&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Literal&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Declarations&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;code&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;csharp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;cp&quot;&gt;&amp;lt;![CDATA[//=====================
                        // File: $classname$.cs
                        // Data: $date$
                        // Author: $author$
                        //------------------------------------
                        // Descriptions: This is a_u116 ?est file used to
                        // demonstrate Code Snippets.
                        // Copyright (c) $company$.
                        // All rights reserved.
                        //
                        // History: $date$ Created
                        ================================]]&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Snippet&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Codesnippet&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在只须轻点几下鼠标，您就可以使用这个代码段了。首先，打开代码段管理器。选择“My Code Snippets”，单击Import按钮。找到您的header.snippet 文件并选择open。在打开的对话框中，点击“My Code Snippets”前面的复选框，然后点击Finish。现在您可以打开“My Code Snippets”节点，选择c# header代码段，对话框右侧显示了您在XML文件中设置的一些属性。找一个C#的类文件试试这个代码段吧，以下代码是我试验时输出的结果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip12.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip13.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip14.jpg&quot; alt=&quot;Figure 14: Click the Checkbox Next to &amp;quot;My Code Snippets&amp;quot; and Click Finish&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip15.jpg&quot; alt=&quot;Figure 15: Open the &amp;quot;My Code Snippets&amp;quot; Node and Highlight the c3header Snippet&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// File:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ClassNamePlaceholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Date: Now&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Author: Patrick Gallucci&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Description: This is a test file used to&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// demonstrate Code Snippets&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Copyright (C) Developer.com.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// All rights reserved.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SnippetTestHarness&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;虽然看上去没有什么了不起的，但通过快捷方式插入头文件还只是一个开始而已。
上面的操作虽然不复杂，但您可能更希望直接操作XML文件。所以下面的两个小节，我将介绍如何“大量生产”代码段，就像有些开源项目做的一样。&lt;/p&gt;

&lt;h2 id=&quot;代码段宏&quot;&gt;代码段宏&lt;/h2&gt;
&lt;p&gt;我发现自己总是要为重载的相同函数写很多代码段，所以就创建了一个Visual Studio宏以便从选定的代码中生成代码段。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip18.jpg&quot; alt=&quot;Figure 18: Double Click the CreateSnippet Macro&quot; /&gt;&lt;/p&gt;

&lt;p&gt;您可以到 &lt;a href=&quot;http://www.developer.com/img/2005/10/CodeSnippetsLibrary.zip&quot;&gt;http://www.developer.com/img/2005/10/CodeSnippetsLibrary.zip&lt;/a&gt; 下载试用。打开该宏，选择您准备用来生成代码段的代码（如图1）。从宏浏览器中双击CreateSnippet 宏（如图2）。
　
然后，窗口切换，您就可以看到解决方案浏览器中的新文件了，虽然有点原始，但毕竟提高了创建代码段的速度。&lt;/p&gt;

&lt;h2 id=&quot;visual-basic-代码段编辑器&quot;&gt;Visual Basic 代码段编辑器&lt;/h2&gt;

&lt;p&gt;上一节结尾提到的那个工具，是我维护的一个开源项目：Visual Basic 代码段编辑器，一个使您创建、编辑、测试代码段更方便的小工具。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/images/Snip20.jpg&quot; alt=&quot;Figure 20: Screenshot of Visual Basic Code Snippet Editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以从http://msdn.microsoft.com/vbasic/downloads/2005/tools/snippeteditor/ 下载试用。虽然不是十分完善，但尝试一下还是值得的，毕竟我们的小组在上面做了不少工作。&lt;/p&gt;

&lt;p&gt;另外，试用一下Visual Basic代码段编辑器、本文中提到的方法和Visual Studio 2005 BOL，您将会很快拥有自己的代码段库。希望这个指南能帮助您了解Visual Studio 2005的智能感应代码段功能，并能提高您的开发效率。&lt;/p&gt;

</description>
        <pubDate>Sun, 26 Jul 2020 06:07:40 +0800</pubDate>
        <link>https://geekplayers.com/introducing-visual-studio-intellisense-code-snippets.html</link>
        <guid isPermaLink="true">https://geekplayers.com/introducing-visual-studio-intellisense-code-snippets.html</guid>
        
        <category>Visual Studio</category>
        
        <category>.NET</category>
        
        
        <category>[&quot;Visual Studio&quot;, &quot;.NET&quot;]</category>
        
        <category>[&quot;Visual Studio&quot;, &quot;.NET&quot;]</category>
        
        <category>Visual Studio</category>
        
        <category>.NET</category>
        
      </item>
    
      <item>
        <title>永远的窗口(个人对窗口的拙见)</title>
        <description>&lt;p&gt;来源: &lt;a href=&quot;https://www.cnblogs.com/helloj2ee/archive/2009/06/29/1513210.html&quot;&gt;永远的窗口（个人对窗口的拙见） - by helloj2ee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;文章愿意和大家分享，但是转载请注明出处！&lt;/p&gt;

&lt;p&gt;如果windows一直存在下去，窗口这个话题也许是永恒的……&lt;/p&gt;

&lt;h2 id=&quot;一切皆窗口&quot;&gt;一切皆窗口&lt;/h2&gt;

&lt;p&gt;在我看来桌面上的一切都是窗口，桌面本身是窗口，开始菜单是窗口，桌面上永远置顶的播放器是个置顶的窗口，工具栏是个子窗口…….&lt;/p&gt;

&lt;p&gt;不仅我这么看，Spy++也这么看，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p1.jpg&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图 1‑1 Spy++和桌面&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一切都是窗口，窗口错落有致，成为界面树上的翩翩叶子，组织成了我们所看到的整个Windows系统用户界面。&lt;/p&gt;

&lt;p&gt;我们首先通过一个普普通通典型的窗口，来分析一下窗口的组成：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p2.jpg&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图 1‑2 普普通通的窗口&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;         一个窗口是有很多界面元素的，比如标题栏，菜单栏，状态栏等等。但实际上可以把这些归为两类，一类是客户区，客户区就是整个窗口中间的部分，在图中已经标示出来。客户区是由程序员负责绘制的，程序员可以在上面写个字或者画个圆这样。而另一类当然是非客户区，除了图上客户区以外的地方，标题栏，水平滚动条等等都是非客户区，这一部分的绘制是由操作系统负责的。&lt;/p&gt;

&lt;p&gt;         界面元素是看的见的，还有一些窗口特性我们用上图是无法表示出来的，比如窗口该如何响应用户的输入？比如窗口的鼠标应该是什么样的，是单箭头或者是其他比较炫的鼠标效果？比如客户区的背景色应该是什么样的等等。&lt;/p&gt;

&lt;p&gt;归纳起来就是两点：&lt;/p&gt;

&lt;p&gt;（1）      窗口的界面元素分成两类，一类是客户区，另一类是非客户区；&lt;/p&gt;

&lt;p&gt;（2）      窗口的特性，看得见的，看不见的，七大姑八大姨的，确实很多。&lt;/p&gt;

&lt;p&gt;一个成功的窗口需要程序员和操作系统默契配合。操作系统作一些通用的，基础的工作，比如绘制一个标题栏，状态栏这样的事情。程序员作一些特定的工作，比如读一个数据文件，然后用图形化的方式显示在窗口客户区内。&lt;/p&gt;

&lt;h2 id=&quot;2-窗口的创建&quot;&gt;2. 窗口的创建&lt;/h2&gt;

&lt;p&gt;前面我说了，窗口的特性是很多的。不是一般的多，而是七大姑八大姨般的多。因此窗口的创建，一般的方法，那就麻烦了。程序员需要一个一个指定这些特性，看得见得要指定，看不见的还要指定。不仅如此，每打算创建一个窗口，你就要指定一次，无论这些窗口有多么类似，你还是要不厌其烦地指定下去。&lt;/p&gt;

&lt;p&gt;有些人怕麻烦，他指定了三五个特性，最终宣布”这真不是人干的活，老子金盆洗手了……“,这些人，我们只有哎……&lt;/p&gt;

&lt;p&gt;有些人不怕麻烦，他会老老实实一遍一遍指定下去，这些人，我们尊敬他们…….&lt;/p&gt;

&lt;p&gt;         还有些人怕麻烦，于是他们想出了新的办法，这些人，我们只有崇拜…….&lt;/p&gt;

&lt;p&gt;技术精英们想出的办法是”把共性的东西，抽象出来”。这句话我在下面会慢慢解释。&lt;/p&gt;

&lt;h3 id=&quot;21-把共性的东西抽象出来&quot;&gt;2.1 把共性的东西，抽象出来&lt;/h3&gt;

&lt;p&gt;在Windows操作系统里，我们是用窗口句柄（HWND）来操作一个窗口的。HWND就相当于每个窗口的钥匙。Windows里CreateWindow或者CreateWindowEx都是创建一个窗口的函数，它们返回 HWND类型的一个值，以便程序员继续对窗口进行操作。这个值对应的是桌面上一个一个实实在在的窗口，我们看到这些窗口有很多特性是类似的，比如窗口客户区的背景色都是白色的，鼠标的光标形状都是一样的等等。于是技术精英们就把这些共性的东西抽象出来了，抽象成了一个结构，这个结构我们称之为窗口类（windows class）。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WNDPROC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpfnWndProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cbClsExtra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cbWndExtra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HICON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HCURSOR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HBRUSH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hbrBackground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpszMenuName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpszClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WNDCLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PWNDCLASS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 2‑1 窗口类结构体&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这里面最为重要的是第二个成员窗口过程，如果把窗口比作有生命的物体，那么窗口过程就注入了灵魂。这个我们需要在消息循环一节当中解释。&lt;/p&gt;

&lt;p&gt;其他的比较常用的成员变量，比如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hIcon&lt;/code&gt;指定了应用程序的图标，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hCursor&lt;/code&gt;指定了鼠标的形状，hbrBackground指定了客户区的背景色，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lpszMenuName&lt;/code&gt;指定了窗口类的菜单，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lpszClassName&lt;/code&gt;指定了窗口类的名字等等。这些特性是每个窗口都具备的共性，因此全部抽象成了窗口类的成员变量。&lt;/p&gt;

&lt;p&gt;窗口类和窗口的关系，在面向对象里我们可以把它们比作类和对象的关系。但是更贴切的比喻，我认为是模具和成品的关系。窗口类好比一个个模具，想要做按钮，我们就拿一个按钮的模具，倒成一个模子，然后再在上面做一些慢工细活，成为一个按钮。想做组合框，我们就拿一个组合框的模具，想做编辑框，我们就拿一个编辑框的模具，想做一个花瓶，我们就拿……. 问题来了，操作系统没有提供花瓶的模具，不过也有办法，操作系统会告诉我们，你把模具的特性告诉我，我会给你制作一个花瓶的模具。&lt;/p&gt;

&lt;p&gt;有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Win32&lt;/code&gt;经验的程序员都知道，每次创建窗口之前，我们都会调用一个函数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RegisterClass&lt;/code&gt;，注册窗口类。注册窗口类实际上就是告诉操作系统模具的特性和要求，让操作系统为我们制作一个模具。&lt;/p&gt;

&lt;p&gt;因此一个标准的窗口创建过程，如下所示： &lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;LRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CALLBACK&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WndProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APIENTRY&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WinMain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hPrevInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;LPSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpCmdLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nCmdShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TCHAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szAppName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HelloWin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;WNDCLASS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 注册窗口&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CS_HREDRAW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CS_VREDRAW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpfnWndProc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WndProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbClsExtra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbWndExtra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hIcon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadIcon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDI_APPLICATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hCursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoadCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDC_ARROW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hbrBackground&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HBRUSH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetStockObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WHITE_BRUSH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpszMenuName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpszClassName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;szAppName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegisterClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wndclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 创建窗口并显示窗口&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;szAppName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The Hello Program&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;WS_OVERLAPPEDWINDOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;CW_USEDEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;ShowWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nCmdShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UpdateWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// …….&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CALLBACK&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WndProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefWindowProc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;strong&gt;代码 2‑2 标准的窗口创建过程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但是这个还远没有结束。按照毛主席老人家的话，这是”万里长征第一步”。如果运行一下这个程序，窗口犹如昙花一现，一闪而过。这其中的原因，我们还是要留在后面介绍。操作系统之所以能够找到指定的模具来制作窗口，主要是靠窗口类的类名（lpszClassName）。我们可以看到CreateWindow的第一个参数便是窗口类的类名，操作系统根据这个类名去寻找相应的系统窗口类或者是应用程序注册的窗口类。&lt;/p&gt;

&lt;h3 id=&quot;22-唏嘘感慨几句&quot;&gt;2.2 唏嘘感慨几句&lt;/h3&gt;

&lt;p&gt;说到这里，真的是要唏嘘感慨几句。相信绝大多数程序员都有这个认识，就是C语言是过程语言，而C++是面向对象的语言。但是Win32掷地有声地告诉我们，语言只是载体，用C语言同样可以写出面向对象思想的程序。窗口类和窗口即是明证。&lt;/p&gt;

&lt;p&gt;此外，如果你是从Win32，MFC, WinForm到现在最为流行的WPF一路走来，同样也会感到微软的技术进步带给程序员的便利。我自认为对Win32还算是熟悉，但是让我创建一个窗口的时候，我往往也是要从MSDN里找出一段代码Copy上去，或者是直接利用向导创建一个HelloWorld。在MFC里，事情并没有得到好转，虽然我们可以利用向导直接得到一个单文档，多文档或者是基于对话框的应用程序，但是我们连应用程序的入口（WinMain）都找不到了。相信每个MFC程序员，在早期的MFC学习当中都是痛苦不堪的。在WinForm中创建窗口，真正的变的简单。多简单？一句话。只需要一句话，一个窗口就创建出来了。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HelloWorldWinForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 2‑3 WinForm里创建窗口&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;按理说，WinForm已经简单到了极致。WPF没有理由再简单，但他还是做到了。因为在WPF里甚至不需要写任何程序，只需要在指定应用程序启动的时候启动那个窗口文件即可。&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Application&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class =&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HelloWorldWPF.App&quot;&lt;/span&gt; 
	&lt;span class=&quot;na&quot;&gt;xmlns =&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:x =&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;StartupUri =&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HelloWorldWPF.xaml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 2‑4 WPF里创建窗口&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;所以真的是不从历史这样一步一步走到当代，就看不出进步。这几个例子的源码我都写好了，放在附件文件夹下，各位的机器有VC6.0和VS2008的环境的话即可运行。&lt;/p&gt;

&lt;h2 id=&quot;3-窗口的类型&quot;&gt;3. 窗口的类型&lt;/h2&gt;

&lt;p&gt;注册完窗口类，紧接着就是创建窗口，过去在创建窗口的时候，我很拿不准的就是指定样式（CreateWindow的第三个参数）。因为窗口的样式确实太多，我简单统计了一下窗口样式有18种，也许有人觉得不算多，但是这18种还是可以任意组合的。这样就真是无穷无尽了。但是好好的归纳和总结，事情是可以变的简单的。真正的窗口类型只有5种，而真正常用的只有3种。下面，我需要分别介绍一下这5种窗口类型，实际上搞清楚前3种，大体也就OK了。&lt;/p&gt;

&lt;h3 id=&quot;31重叠式窗口overlapped-windows&quot;&gt;3.1    重叠式窗口（Overlapped Windows）&lt;/h3&gt;

&lt;p&gt;一个重叠式窗口往往是应用程序的主窗口，它有标题栏，边框，客户区，图标，最小化，最大化按钮等等。创建窗口的时候，如果你指定WS_OVERLAPPED或者WS_OVERLAPPEDWINDOW 这样的样式，就可以创建一个重叠式窗口。&lt;/p&gt;

&lt;p&gt;相信一定会有人问，WS_OVERLAPPED 和WS_OVERLAPPEDWINDOW 有什么区别？我们只要看看两个宏的定义，便可见分晓（窗口样式的宏都定义在WinUser.h这个文件当中）。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// 摘自WinUser.h文件&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define WS_OVERLAPPED       0x00000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_POPUP            0x80000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_CHILD             0x40000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_MINIMIZE          0x20000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_VISIBLE            0x10000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_DISABLED          0x08000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_CLIPSIBLINGS       0x04000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_CLIPCHILDREN      0x02000000L
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WS_MAXIMIZE         0x01000000L
&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;......&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define WS_OVERLAPPEDWINDOW (WS_OVERLAPPED     | &quot;
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;WS_CAPTION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    WS_SYSMENU | &quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    WS_MINIMIZEBOX | &quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WS_MAXIMIZEBOX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 3‑1 窗口样式&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;从定义上也能看出&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WS_OVERLAPPEDWINDOW&lt;/code&gt;是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WS_OVERLAPPED&lt;/code&gt;和其他样式的一种组合。&lt;/p&gt;

&lt;p&gt;写到这里，我们不得不岔开一下话题，谈一谈关于程序员”小气和高明”的问题。&lt;/p&gt;

&lt;h3 id=&quot;小气和高明的程序员&quot;&gt;小气和高明的程序员&lt;/h3&gt;

&lt;p&gt;细心的读者可能已经注意到了，窗口样式的宏定义并不是按照我们常规的方式来定义，比如WS_OVERLAPPED用1来表示，WS_POPUP用2来表示，以此类推……实际上宏定义全部采用的是16进制的表示方法，而且在表示也是有讲究的，基本上用的是1(2^0^)，2(2^1^)，4(2^2^)，8(2^3^)这样的数值表示。实际上不仅仅是窗口样式，绝大部分类似窗口样式这种可以组合表示的宏都采用的这种手法。也许还是有相当的新手，不知道这样表示的妙用，我们把他们全部用二进制的表示方法，秘密昭然若揭。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;表格 3‑1 窗口样式的二进制和十六进制表示&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;样式&lt;/th&gt;
      &lt;th&gt;数值表示（32位整型数字,2进制表示）&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;数值（16进制）&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_OVERLAPPED&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;0x00000000L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_POPUP&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;0x80000000L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_CHILD&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;0x40000000L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_MINIMIZE&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;0x20000000L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_VISIBLE&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;0x10000000L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WS_POPUP | WS_CHILD&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;……&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/window_macros_table.png&quot; alt=&quot;window macros table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;察觉出来没有，程序员没有用一个整型（32位）来表示一个特定的窗口样式，而是用1位来表示窗口样式。小气吗？真小气，早期的程序员就像守财奴一样非常吝啬地使用自己的内存。一个32位的整型，程序员用其中1位来表示一个特定的样式。如果其中有几位都是1呢？那么它表示的就是一个样式的组合。因此，我们可以看到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WS_OVERLAPPEDWINDOW&lt;/code&gt; 可以由几个窗口样式进行或运算组合而成。&lt;/p&gt;

&lt;p&gt;这样的做法也是一个极其高明的做法。需要组合的这种参数，往往会设计成这样。它们通过或运算组合而成。判断该参数里是否有某一个特定的样式，则用与运算来检验。将样式从某一个组合里剔除出来，则采用与非运算。如下所示：&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_POPUP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// 数值为0x80000000&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_MINIMIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//样式组合成了 WS_POPUP | WS_MINIMIZE    数值为0x80000000 | 0x20000000为0xa0000000&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_MINIMIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 判断style里是否有WS_MINIMIZE 返回为真&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_CHILD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//判断style里是否有WS_CHILD返回为假    &lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WS_MINIMIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//从样式里去掉了WS_MINIMIZE样式         数值为0x80000000&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 3‑2 窗口样式运算&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;32弹出式窗口popup-window&quot;&gt;3.2    弹出式窗口（Popup Window）&lt;/h2&gt;

&lt;p&gt;最典型的弹出式窗口是对话框。弹出式窗口和重叠式窗口还是相当类似的。弹出式窗口和重叠式窗口到底有什么区别呢？&lt;/p&gt;

&lt;p&gt;一般来说一个应用程序的主窗口是重叠式窗口，而弹出式窗口多用于对话框，消息框这样的窗口。当然还有细节上的问题。&lt;/p&gt;

&lt;p&gt;（1） WS_OVERLAPPED样式创建的窗口是含有标题栏的，而WS_POPUP样式创建的窗口是不含标题栏的，如果需要创建一个带标题栏的WS_POPUP样式的窗口，那么需要运用WS_POPUP | WS_CAPTION样式组合；&lt;/p&gt;

&lt;p&gt;（2） 在创建WS_OVERLAPPED样式窗口的时候，CreateWindow或者CreateWindowEx函数当中x,y,nWidth, nHeight四个参数都可以取CW_USEDEFAULT默认值，系统会选择一个合适的值。但是创建WS_POPUP样式的窗口，CW_USEDEFAULT对这四个参数是无效的，如果程序员一意孤行非要传CW_USEDEFAULT值，系统会默认认为这几个参数为0，那么这个时候整个窗口的大小就为0。这个时候往往会给程序员造成一种错觉，以为自己的窗口没有创建出来，实际上窗口已经创建出来了，只不过它长宽均为0而已。&lt;/p&gt;

&lt;h2 id=&quot;33-子窗口child-window&quot;&gt;3.3 子窗口（Child Window）&lt;/h2&gt;

&lt;p&gt;类似于按钮这样的窗口，我们称之为子窗口。子窗口的样式为WS_CHILD,子窗口必须得有一个父窗口。而且子窗口的区域一定限制在父窗口的客户区内。一般一个子窗口默认只有客户区，除非程序员再去显示地为子窗口指定标题栏（WS_CAPTION）或者边框（WS_BORDER）之类的样式。&lt;/p&gt;

&lt;p&gt;自此，应该说窗口的类型算是基本上介绍完了。无论桌面上的窗口怎么变，有80%都是在这三种之间变来变去，把弹出窗口加一个标题栏，或者把重叠窗口加上最大最小化按钮啊等等。但确实还有一小撮不属于这三种类型的，但是下面的两种都是属于比较特殊的情况，为了满足各位的好奇心，我们还是把窗口的类型介绍完整。&lt;/p&gt;

&lt;h3 id=&quot;34-分层窗口layered-window&quot;&gt;3.4 分层窗口（Layered Window）&lt;/h3&gt;

&lt;p&gt;分层窗口，这样的翻译不知道是否准确。因为这一部分，大家讨论得还是比较少，因此没有什么统一认可的翻译方式。分层窗口是在Windows2000之后才出现的。如果大家比较感兴趣可以参考我的另一篇文章《分层窗口——Windows进化的中间产物》。&lt;/p&gt;

&lt;p&gt;如果各位体验过Windows2000以前的产品，Windows95或者Windows98。细心的用户会发现Windows为了改进用户体验，在部分细节的地方作了改变，比如鼠标。在Windows2000以前，鼠标只是一个平面的箭头。而在Windows2000和Windows2000以后，鼠标下面会增加了一层阴影，以强化其视觉深度。这样使得鼠标更有立体感，在大的显示器甚至是多个显示器上更容易找到那个小小的鼠标。 &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p3.jpg&quot; alt=&quot;img3&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;strong&gt;图 3‑1 左图是Windows200以前的鼠标，右图是Windows2000以后的鼠标，增加了阴影&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;再比如置顶窗口的一个时钟，透明地浮动在窗口，为你显示时间。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p4.jpg&quot; alt=&quot;img4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图 3‑2 透明时钟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;再比如Office助手，这样的小玩意。它浮动在窗口的顶层，可能是一个老头，也可能是一个妙龄少女，或者是一个机器人，你问它答。Office助手已经完全脱离了传统的窗口样式&lt;/p&gt;

&lt;p&gt;还有…….等等这样的特殊效果，都是分层窗口所致。我再重复一遍，这篇文章我们不讨论太多的这种窗口，如果有兴趣我会再写另一篇文章《分层窗口——Windows进化的中间产物》。&lt;/p&gt;

&lt;h3 id=&quot;35单一处理消息窗口message-only-windows&quot;&gt;3.5   单一处理消息窗口（Message-Only Windows）&lt;/h3&gt;

&lt;p&gt;Message-Only Windows这个翻译成单一处理消息窗口，不知道是否妥贴。我一般翻译都不喜欢自创，一般会遵循大家普遍认可的翻译方式，但是Message-Only Windows也许大家不够关注，于是缺少一个普遍认可的词汇，不得已只有自己创造之。&lt;/p&gt;

&lt;p&gt;其实E文的名称已经足以说明该窗口是个什么咚咚，就是一个看不见，找不着，专门用来处理消息的窗口。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相关参考:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winmsg/window-features#message-only-windows&quot;&gt;Message-Only Windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/kwliu/archive/2011/07/30/2121861.html&quot;&gt;https://www.cnblogs.com/kwliu/archive/2011/07/30/2121861.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/7969/How-to-make-a-Message-Only-Window&quot;&gt;https://www.codeproject.com/Articles/7969/How-to-make-a-Message-Only-Window&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;4消息循环&quot;&gt;4.消息循环&lt;/h2&gt;

&lt;p&gt;我们已经运行过代码 2‑2。事实是窗口昙花一现，一闪而过；原因是我们缺少最必要的一环就是消息循环。我每回在写一个标准的Windows程序时候，等到加消息循环的时候，就会有意停顿一下，因为感觉自己就像一个画龙的画师，等待着给龙点睛&lt;a href=&quot;https://www.cnblogs.com/helloj2ee/archive/2009/06/29/1513210.html#_ftn2&quot;&gt;[2]&lt;/a&gt;。点睛的龙，会一飞冲天；加上消息循环的窗口，则注入了生命。&lt;/p&gt;

&lt;p&gt;整个消息循环的代码如下，非常简单，三个函数和一个While循环搞定。但是要真正地解释清楚，这里面涉及到应用程序和操作系统的关系，还有消息，消息队列以及窗口过程等重要概念。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;MSG&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;......&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;TranslateMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;DispatchMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;代码 4‑1 消息循环的代码&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;事实上，我已经说过所有的应用程序都是系统和程序员进行配合完成的。我在阅读MSDN关于窗口这一部分文档，结合自己的编程经验，脑海里常常呈现出一幅应用程序和操作系统”你来浇水，我施肥”的和谐共建图。但是每回拿起笔，又感觉颇为艰难。一次无意当中随手随手翻翻侯捷大师的《深入浅出MFC》（经典书是常翻的），以前没有注意到的一幅图完全抓住了我的眼球。因为正是我脑海中常常浮现的一幅图，虽然这幅图还是有部分瑕疵，但是瑕不掩瑜，老实说我是画不出来的……&lt;/p&gt;

&lt;p&gt;一幅应用程序和操作系统”你来浇水，我施肥”的和谐共建图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p5.jpg&quot; alt=&quot;img5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图4‑1 windows程序与操作系统关系（侯捷，1997）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这幅图，如果简单的归纳只能用十二个字来表示”以消息为基础，以事件驱动之”。如果是E文，这更为简洁明了”message based, event driven”。但是这个就好比”五心向天”这样的口诀，光记下来是没用的，因此我们这一节都是围绕着这个图来解释这十二字真言。&lt;/p&gt;

&lt;p&gt;前面我们已经说过，当我们注册完窗口类（RegisterClass），创建窗口（CreateWindow）和显示窗口（ShowWindow，UpdateWindow）。一个应用程序就进入了消息循环，这个时候窗口所需要做的事情就是两个字——“等待”。操作系统说，”您该重绘了”，于是窗口就把自己重新画一遍，操作系统说”您该响应鼠标消息了”，窗口就响应一下鼠标消息。总之”敌不动，我不动，敌一动，我乱动”。&lt;/p&gt;

&lt;p&gt;人和人之间交流用语言，留便条或者打手机等等。操作系统和应用程序之间，他们用消息来进行这样的通讯。 操作系统说 ”您该重绘了”，它会向应用程序发送一个WM_PAINT消息；操作系统说”用户按下鼠标左键了”，它会向应用程序发送一个”WM_LBUTTONDOWN”消息等等。而窗口收到了这些消息，当然也需要处理这些消息，窗口有一个集中处理消息的办公地点，这个办公地点称之为”窗口过程”函数（WndProc）。实际上在注册窗口类的时候，就将一种特定类型的窗口和窗口过程函数绑定在了一起。倘若不记得，不妨回过头再看看窗口的创建一节。&lt;/p&gt;

&lt;p&gt;窗口过程函数就好象是一个专门处理消息的部门。当然这个小小的部门也不是所有大事小事都能完全处理，有些消息，窗口可以自己处理，但是有些消息，窗口处理不了。处理不了的事情按照常规当然是要及时上报，于是窗口过程函数的实现都是同一个模子。首先上来switch….case，处理消息1，消息2，消息3…..处理不了，那么交给操作系统去处理（default return DefWindowProc……），DefWindowProc函数的意思是让操作系统按照默认的方式处理消息。&lt;/p&gt;

&lt;p&gt;一个一个消息就好比一件一件公文，最终放到窗口过程函数的桌面上等待处理。但是这些公文的到来，也是有不同的途径。第一种途径当然是一种常规途径，就是按照先来后到的顺序，排成队处理。而第二种途径自然是特权途径，这种就好比领导打个电话或者递个条子语重心长地说”小李啊，这个特事要特办啊”。其实我还是蛮痛恨这种”递条子”现象。但是在计算机这档子事里还真是必须要有这种特权现象存在。&lt;/p&gt;

&lt;h2 id=&quot;41-两种不同的消息传递途径&quot;&gt;4.1 两种不同的消息传递途径&lt;/h2&gt;

&lt;h3 id=&quot;百姓苦排队型进队消息&quot;&gt;百姓苦排队型（进队消息）&lt;/h3&gt;

&lt;p&gt;我们现在来具体说说这两种途径。先说第一种途径，消息要一件一件处理，总要安排个地方给消息排队。因此操作系统为窗口安排了两个消息队列，消息来了统统在这两个消息队列里排队。然后应用程序的消息循环取出消息（GetMessage,TranslateMessage和DispatchMessage），传给窗口过程函数去处理。&lt;/p&gt;

&lt;p&gt;两个消息队列分别是系统消息队列（System Message Queue）和应用程序消息队列（Application Message Queue）。注意系统消息队列是唯一的，也就是说一个操作系统也就一个系统消息队列，用户点击鼠标，敲击键盘，由相应的鼠标和键盘驱动将这些外部事件转换为鼠标和键盘消息，然后放在系统消息队列里排队。操作系统非常聪明会知道某个鼠标键盘消息属于哪个窗口，然后把相应的消息放到特定窗口应用程序消息队列中。注意我再重复一遍，系统消息队列会把相应的消息放到特定窗口的应用程序消息队列中。换句话说，消息循环不会从系统消息队列里去取消息，只会从特定窗口的应用程序消息队列中取消息。因此侯先生的这幅图出现了一点小小的瑕疵，它应该修改成如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/yanglr/yanglr.github.io/assets/images/public/forever-window-p6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图 4‑2 windows程序与操作系统关系（作者修改）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;而应用程序消息队列接受的都是该窗口的鼠标和键盘消息或者菜单消息等等。总之属于该窗口的消息都会最终放置在该窗口的应用程序消息队列里，以应用程序的眼光来看，是不需要知道该消息是放在系统消息队列还是应用程序消息队列，应用程序只需要从应用程序消息队列取消息即可。&lt;/p&gt;

&lt;h3 id=&quot;领导递条子型非进队消息&quot;&gt;领导递条子型（非进队消息）&lt;/h3&gt;

&lt;p&gt;第二种途径当然要”牛”很多。这种”牛”体现在两点上。第一这些消息从来不排队，直接抵达窗口过程函数。第二点更”牛”，这种消息到达窗口过程就必须得处理，处理不完就一直等待。幸运的是计算机里我们不需要送美女，送金钱，只需要调用SendMessage，这样消息就直接摆放在窗口过程的桌子上，窗口过程不处理都不行。&lt;/p&gt;

&lt;h2 id=&quot;42-几个特殊进队的消息&quot;&gt;4.2 几个特殊进队的消息&lt;/h2&gt;

&lt;p&gt;按说进队消息已经没什么特殊，他们都是老老实实地遵循先进先出（first in first out）的原则。但是仍然有些消息会特殊。按照常理来想，如果你要搞特殊，大可不排队，走领导递条子型不就得了。但是这些消息特殊，并不是特殊在他们要特权，他们的问题是太过谦让，看到其他消息总是说”您请先”。&lt;/p&gt;

&lt;p&gt;现在让我们介绍一下，这几个特殊而高尚的信息。他们分别是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_QUIT&lt;/code&gt;消息。这三个消息总在谦让，他们谦让的程度让人咂舌。消息队列里只要还有一条消息在排队，他们都不会往前，直到消息队列为空，才会交给窗口过程处理。&lt;/p&gt;

&lt;p&gt;当系统感觉到窗口需要重绘的时候，比如窗口大小，尺寸等发生变化，会向窗口发送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;消息，告知窗口需要重绘。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;消息不仅会谦让，而且当消息队列里有多个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;消息，系统会自动合并成一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;消息，同时会将每个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;消息的无效矩形合并成一个大的无效矩形。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;之所以这样做，是因为避免窗口过多地重绘造成的系统低效。关于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_PAINT&lt;/code&gt;和无效矩形，我想还得再写一篇文章来说明这个问题。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;是设置了计时器之后，系统会按照计时器规定的间隔时间来定时发送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;消息。由于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;消息是一个具有”先人后己”道德高尚的消息，因此，我们说这种计时器是不太准的，比如定时器设置了每50毫秒发送一次&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;消息，但是50毫秒的时候，消息队列里还有很多其他兄弟消息，于是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;就忍让了，可能51毫秒或者52毫秒的时候&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_TIMER&lt;/code&gt;消息才会放到消息队列当中。&lt;/p&gt;

&lt;p&gt;当应用程序需要退出的时候，系统会发送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_QUIT&lt;/code&gt;消息。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_QUIT&lt;/code&gt;的谦让精神和前面的兄弟消息也是一样，就无需多言了。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_QUIT&lt;/code&gt;的特殊之处，在于GetMessage一旦得到的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WM_QUIT&lt;/code&gt;消息，就返回0，整个消息循环就结束了，Game Over！&lt;/p&gt;

&lt;h3 id=&quot;43-一个消息的完整结构&quot;&gt;4.3 一个消息的完整结构&lt;/h3&gt;

&lt;p&gt;其实我前面有埋一个伏笔，那就是操作系统怎么就能如此聪明，知道哪个消息是属于哪个窗口的呢？其实看看消息的结构，就不难知道答案。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;tagMSG&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MSG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;消息结构体，总共有六个成员变量。第一个就是窗口句柄&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hwnd&lt;/code&gt;，这个参数就告诉我们是哪个窗口收到消息，操作系统可以根据这个信息将消息放到合适的窗口应用程序消息队列当中；第二个是消息的标识，比如WM_PAINT等；第三和第四参数都是用来存储消息的额外信息；第五个参数记录的是消息被放入到消息队列的时间；第六个参数是消息被放入到消息队列时，鼠标所在的位置。&lt;/p&gt;

&lt;h2 id=&quot;5-小结&quot;&gt;5. 小结&lt;/h2&gt;

&lt;p&gt;写到最后了，还是小结一下。&lt;/p&gt;

&lt;p&gt;Windows里一切都由窗口组成 &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;窗口类是模具，窗口是成品 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;窗口的类型样式很多，但归纳起来也就那么几种 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;消息循环是窗口的灵魂，消息为基础，事件驱动之 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有特权的消息不排队，无特权的消息排队 &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;但是总会有那些有谦让精神崇高的消息 &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我想《永远的窗口》此文就到此结束了……&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2020 19:06:50 +0800</pubDate>
        <link>https://geekplayers.com/forever-window-personal-view-on-window.html</link>
        <guid isPermaLink="true">https://geekplayers.com/forever-window-personal-view-on-window.html</guid>
        
        <category>mfc</category>
        
        <category>windows</category>
        
        
        <category>windows</category>
        
      </item>
    
  </channel>
</rss>